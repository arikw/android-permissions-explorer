[
  {
    "apiLevel": "28",
    "permissionId": "ACCEPT_HANDOVER",
    "fullPermissionId": "android.permission.ACCEPT_HANDOVER",
    "description": "Allows a calling app to continue a call which was started in another app. An example is a video calling app that wants to continue a voice call on the user's mobile network.<p> When the handover of a call from one app to another takes place, there are two devices which are involved in the handover; the initiating and receiving devices. The initiating device is where the request to handover the call was started, and the receiving device is where the handover request is confirmed by the other party.<p> This permission protects access to the {@link android.telecom.TelecomManager#acceptHandover(Uri, int, PhoneAccountHandle)} which the receiving side of the handover uses to accept a handover. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "29",
    "permissionId": "ACCESS_BACKGROUND_LOCATION",
    "fullPermissionId": "android.permission.ACCESS_BACKGROUND_LOCATION",
    "description": "Allows an app to access location in the background. If you're requesting this permission, you must also request either {@link #ACCESS_COARSE_LOCATION} or {@link #ACCESS_FINE_LOCATION}. Requesting this permission by itself doesn't give you location access. <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}.",
    "protectionLevel": [
      "dangerous",
      "instant"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "ACCESS_BLOBS_ACROSS_USERS",
    "description": "Allows an application to access data blobs across users."
  },
  {
    "apiLevel": "1",
    "permissionId": "ACCESS_CHECKIN_PROPERTIES",
    "fullPermissionId": "android.permission.ACCESS_CHECKIN_PROPERTIES",
    "description": "Allows read/write access to the \"properties\" table in the checkin database, to change values that get uploaded. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "ACCESS_COARSE_LOCATION",
    "fullPermissionId": "android.permission.ACCESS_COARSE_LOCATION",
    "description": "Allows an app to access approximate location. Alternatively, you might want {@link #ACCESS_FINE_LOCATION}. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous",
      "instant"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "ACCESS_FINE_LOCATION",
    "description": "Allows an app to access precise location. Alternatively, you might want ACCESS_COARSE_LOCATION. Protection level: dangerous"
  },
  {
    "apiLevel": "35",
    "permissionId": "ACCESS_HIDDEN_PROFILES",
    "description": "Allows applications to access profiles with android.content.pm.UserProperties#PROFILE_API_VISIBILITY_HIDDEN user property, e.g. UserManager.USER_TYPE_PROFILE_PRIVATE. Protection level: normal"
  },
  {
    "apiLevel": "1",
    "permissionId": "ACCESS_LOCATION_EXTRA_COMMANDS",
    "fullPermissionId": "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS",
    "description": "Allows an application to access extra location provider commands. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "29",
    "permissionId": "ACCESS_MEDIA_LOCATION",
    "fullPermissionId": "android.permission.ACCESS_MEDIA_LOCATION",
    "description": "Allows an application to access any geographic locations persisted in the user's shared collection.",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "ACCESS_NETWORK_STATE",
    "fullPermissionId": "android.permission.ACCESS_NETWORK_STATE",
    "description": "Allows applications to access information about networks. <p>Protection level: normal",
    "protectionLevel": [
      "normal",
      "instant"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "ACCESS_NOTIFICATION_POLICY",
    "fullPermissionId": "android.permission.ACCESS_NOTIFICATION_POLICY",
    "description": "Marker permission for applications that wish to access notification policy. This permission is not supported on managed profiles. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "ACCESS_WIFI_STATE",
    "fullPermissionId": "android.permission.ACCESS_WIFI_STATE",
    "description": "Allows applications to access information about Wi-Fi networks. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "5",
    "permissionId": "ACCOUNT_MANAGER",
    "fullPermissionId": "android.permission.ACCOUNT_MANAGER",
    "description": "Allows applications to call into AccountAuthenticators. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "29",
    "permissionId": "ACTIVITY_RECOGNITION",
    "fullPermissionId": "android.permission-group.ACTIVITY_RECOGNITION",
    "description": "Allows an application to recognize physical activity. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous",
      "instant"
    ]
  },
  {
    "apiLevel": "14",
    "permissionId": "ADD_VOICEMAIL",
    "fullPermissionId": "com.android.voicemail.permission.ADD_VOICEMAIL",
    "description": "Allows an application to add voicemails into the system. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "26",
    "permissionId": "ANSWER_PHONE_CALLS",
    "fullPermissionId": "android.permission.ANSWER_PHONE_CALLS",
    "description": "Allows the app to answer an incoming phone call. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous",
      "runtime"
    ]
  },
  {
    "apiLevel": "36",
    "permissionId": "APPLY_PICTURE_PROFILE",
    "description": "Allows an app to apply a ERROR(/MediaQualityManager.PictureProfile) to a layer via ERROR(/MediaCodec.PARAMETER_KEY_PICTURE_PROFILE) and, additionally, system apps via ERROR(/SurfaceControl.Transaction#setPictureProfileHandle)."
  },
  {
    "apiLevel": "1",
    "permissionId": "BATTERY_STATS",
    "fullPermissionId": "android.permission.BATTERY_STATS",
    "description": "Allows an application to collect battery statistics",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "16",
    "permissionId": "BIND_ACCESSIBILITY_SERVICE",
    "fullPermissionId": "android.permission.BIND_ACCESSIBILITY_SERVICE",
    "description": "Must be required by an {@link android.accessibilityservice.AccessibilityService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "3",
    "permissionId": "BIND_APPWIDGET",
    "fullPermissionId": "android.permission.BIND_APPWIDGET",
    "description": "Allows an application to tell the AppWidget service which application can access AppWidget's data. The normal user flow is that a user picks an AppWidget to go into a particular host, thereby giving that host application access to the private data from the AppWidget app. An application that has this permission should honor that contract. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "36",
    "permissionId": "BIND_APP_FUNCTION_SERVICE",
    "description": "Must be required by an AppFunctionService, to ensure that only the system can bind to it. Protection level: signature"
  },
  {
    "apiLevel": "26",
    "permissionId": "BIND_AUTOFILL_SERVICE",
    "fullPermissionId": "android.permission.BIND_AUTOFILL_SERVICE",
    "description": "Must be required by a {@link android.service.autofill.AutofillService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "29",
    "permissionId": "BIND_CALL_REDIRECTION_SERVICE",
    "fullPermissionId": "android.permission.BIND_CALL_REDIRECTION_SERVICE",
    "description": "Must be required by a {@link android.telecom.CallRedirectionService}, to ensure that only the system can bind to it. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "29",
    "permissionId": "BIND_CARRIER_MESSAGING_CLIENT_SERVICE",
    "fullPermissionId": "android.permission.BIND_CARRIER_MESSAGING_CLIENT_SERVICE",
    "description": "A subclass of {@link android.service.carrier.CarrierMessagingClientService} must be protected with this permission.",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "22",
    "permissionId": "BIND_CARRIER_MESSAGING_SERVICE",
    "fullPermissionId": "android.permission.BIND_CARRIER_MESSAGING_SERVICE",
    "description": "@deprecated Use {@link android.Manifest.permission#BIND_CARRIER_SERVICES} instead",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "BIND_CARRIER_SERVICES",
    "fullPermissionId": "android.permission.BIND_CARRIER_SERVICES",
    "description": "The system process that is allowed to bind to services in carrier apps will have this permission. Carrier apps should use this permission to protect their services that only the system is allowed to bind to. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "BIND_CHOOSER_TARGET_SERVICE",
    "fullPermissionId": "android.permission.BIND_CHOOSER_TARGET_SERVICE",
    "description": "Must be required by a {@link android.service.chooser.ChooserTargetService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "BIND_COMPANION_DEVICE_SERVICE",
    "description": "Must be required by any CompanionDeviceServices to ensure that only the system can bind to it."
  },
  {
    "apiLevel": "24",
    "permissionId": "BIND_CONDITION_PROVIDER_SERVICE",
    "fullPermissionId": "android.permission.BIND_CONDITION_PROVIDER_SERVICE",
    "description": "Must be required by a {@link android.service.notification.ConditionProviderService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "30",
    "permissionId": "BIND_CONTROLS",
    "description": "Allows SystemUI to request third party controls. Should only be requested by the System and required by ControlsProviderService declarations."
  },
  {
    "apiLevel": "34",
    "permissionId": "BIND_CREDENTIAL_PROVIDER_SERVICE",
    "description": "Must be required by a CredentialProviderService to ensure that only the system can bind to it. Protection level: signature"
  },
  {
    "apiLevel": "8",
    "permissionId": "BIND_DEVICE_ADMIN",
    "fullPermissionId": "android.permission.BIND_DEVICE_ADMIN",
    "description": "Must be required by device administration receiver, to ensure that only the system can interact with it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "21",
    "permissionId": "BIND_DREAM_SERVICE",
    "fullPermissionId": "android.permission.BIND_DREAM_SERVICE",
    "description": "Must be required by an {@link android.service.dreams.DreamService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "BIND_INCALL_SERVICE",
    "fullPermissionId": "android.permission.BIND_INCALL_SERVICE",
    "description": "Must be required by a {@link android.telecom.InCallService}, to ensure that only the system can bind to it. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "3",
    "permissionId": "BIND_INPUT_METHOD",
    "fullPermissionId": "android.permission.BIND_INPUT_METHOD",
    "description": "Must be required by an {@link android.inputmethodservice.InputMethodService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "BIND_MIDI_DEVICE_SERVICE",
    "fullPermissionId": "android.permission.BIND_MIDI_DEVICE_SERVICE",
    "description": "Must be required by an {@link android.media.midi.MidiDeviceService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "19",
    "permissionId": "BIND_NFC_SERVICE",
    "fullPermissionId": "android.permission.BIND_NFC_SERVICE",
    "description": "Must be required by a {@link android.nfc.cardemulation.HostApduService} or {@link android.nfc.cardemulation.OffHostApduService} to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "18",
    "permissionId": "BIND_NOTIFICATION_LISTENER_SERVICE",
    "fullPermissionId": "android.permission.BIND_NOTIFICATION_LISTENER_SERVICE",
    "description": "Must be required by an {@link android.service.notification.NotificationListenerService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "19",
    "permissionId": "BIND_PRINT_SERVICE",
    "fullPermissionId": "android.permission.BIND_PRINT_SERVICE",
    "description": "Must be required by a {@link android.printservice.PrintService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "30",
    "permissionId": "BIND_QUICK_ACCESS_WALLET_SERVICE",
    "description": "Must be required by a QuickAccessWalletService to ensure that only the system can bind to it. Protection level: signature"
  },
  {
    "apiLevel": "24",
    "permissionId": "BIND_QUICK_SETTINGS_TILE",
    "fullPermissionId": "android.permission.BIND_QUICK_SETTINGS_TILE",
    "description": "Allows an application to bind to third party quick settings tiles. <p>Should only be requested by the System, should be required by TileService declarations.",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "11",
    "permissionId": "BIND_REMOTEVIEWS",
    "fullPermissionId": "android.permission.BIND_REMOTEVIEWS",
    "description": "Must be required by a {@link android.widget.RemoteViewsService}, to ensure that only the system can bind to it.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "24",
    "permissionId": "BIND_SCREENING_SERVICE",
    "fullPermissionId": "android.permission.BIND_SCREENING_SERVICE",
    "description": "Must be required by a {@link android.telecom.CallScreeningService}, to ensure that only the system can bind to it. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "BIND_TELECOM_CONNECTION_SERVICE",
    "fullPermissionId": "android.permission.BIND_TELECOM_CONNECTION_SERVICE",
    "description": "Must be required by a {@link android.telecom.ConnectionService}, to ensure that only the system can bind to it. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "14",
    "permissionId": "BIND_TEXT_SERVICE",
    "fullPermissionId": "android.permission.BIND_TEXT_SERVICE",
    "description": "Must be required by a TextService (e.g. SpellCheckerService) to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "36",
    "permissionId": "BIND_TV_AD_SERVICE",
    "description": "Must be required by a android.media.tv.ad.TvAdService to ensure that only the system can bind to it. Protection level: signature|privileged"
  },
  {
    "apiLevel": "21",
    "permissionId": "BIND_TV_INPUT",
    "fullPermissionId": "android.permission.BIND_TV_INPUT",
    "description": "Must be required by a {@link android.media.tv.TvInputService} to ensure that only the system can bind to it. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "BIND_TV_INTERACTIVE_APP",
    "description": "Must be required by a TvInteractiveAppService to ensure that only the system can bind to it. Protection level: signature|privileged"
  },
  {
    "apiLevel": "26",
    "permissionId": "BIND_VISUAL_VOICEMAIL_SERVICE",
    "fullPermissionId": "android.permission.BIND_VISUAL_VOICEMAIL_SERVICE",
    "description": "Must be required by a link {@link android.telephony.VisualVoicemailService} to ensure that only the system can bind to it. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "21",
    "permissionId": "BIND_VOICE_INTERACTION",
    "fullPermissionId": "android.permission.BIND_VOICE_INTERACTION",
    "description": "Must be required by a {@link android.service.voice.VoiceInteractionService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "14",
    "permissionId": "BIND_VPN_SERVICE",
    "fullPermissionId": "android.permission.BIND_VPN_SERVICE",
    "description": "Must be required by a {@link android.net.VpnService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "24",
    "permissionId": "BIND_VR_LISTENER_SERVICE",
    "fullPermissionId": "android.permission.BIND_VR_LISTENER_SERVICE",
    "description": "Must be required by an {@link android.service.vr.VrListenerService}, to ensure that only the system can bind to it. <p>Protection level: signature",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "8",
    "permissionId": "BIND_WALLPAPER",
    "fullPermissionId": "android.permission.BIND_WALLPAPER",
    "description": "Must be required by a {@link android.service.wallpaper.WallpaperService}, to ensure that only the system can bind to it. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "BLUETOOTH",
    "fullPermissionId": "android.permission.BLUETOOTH",
    "description": "Allows applications to connect to paired bluetooth devices. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "BLUETOOTH_ADMIN",
    "fullPermissionId": "android.permission.BLUETOOTH_ADMIN",
    "description": "Allows applications to discover and pair bluetooth devices. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "BLUETOOTH_ADVERTISE",
    "description": "Required to be able to advertise to nearby Bluetooth devices. Protection level: dangerous"
  },
  {
    "apiLevel": "31",
    "permissionId": "BLUETOOTH_CONNECT",
    "description": "Required to be able to connect to paired Bluetooth devices. Protection level: dangerous"
  },
  {
    "apiLevel": "19",
    "permissionId": "BLUETOOTH_PRIVILEGED",
    "fullPermissionId": "android.permission.BLUETOOTH_PRIVILEGED",
    "description": "Allows applications to pair bluetooth devices without user interaction, and to allow or disallow phonebook access or message access. This is not available to third party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "BLUETOOTH_SCAN",
    "description": "Required to be able to discover and pair nearby Bluetooth devices. Protection level: dangerous"
  },
  {
    "apiLevel": "20",
    "permissionId": "BODY_SENSORS",
    "description": "Allows an application to access data from sensors that the user uses to measure what is happening inside their body, such as heart rate. Protection level: dangerous"
  },
  {
    "apiLevel": "33",
    "permissionId": "BODY_SENSORS_BACKGROUND",
    "description": "Allows an application to access data from sensors that the user uses to measure what is happening inside their body, such as heart rate. If you're requesting this permission, you must also request BODY_SENSORS. Requesting this permission by itself doesn't give you Body sensors access. Protection level: dangerous This is a hard restricted permission which cannot be held by an app until the installer on record allowlists the permission. For more details see )\">PackageInstaller.SessionParams.setWhitelistedRestrictedPermissions(Set)."
  },
  {
    "apiLevel": "1",
    "permissionId": "BROADCAST_PACKAGE_REMOVED",
    "fullPermissionId": "android.permission.BROADCAST_PACKAGE_REMOVED",
    "description": "Allows an application to broadcast a notification that an application package has been removed. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "2",
    "permissionId": "BROADCAST_SMS",
    "fullPermissionId": "android.permission.BROADCAST_SMS",
    "description": "Allows an application to broadcast an SMS receipt notification. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "BROADCAST_STICKY",
    "fullPermissionId": "android.permission.BROADCAST_STICKY",
    "description": "Allows an application to broadcast sticky intents. These are broadcasts whose data is held by the system after being finished, so that clients can quickly retrieve that data without having to wait for the next broadcast. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "2",
    "permissionId": "BROADCAST_WAP_PUSH",
    "fullPermissionId": "android.permission.BROADCAST_WAP_PUSH",
    "description": "Allows an application to broadcast a WAP PUSH receipt notification. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "29",
    "permissionId": "CALL_COMPANION_APP",
    "fullPermissionId": "android.permission.CALL_COMPANION_APP",
    "description": "Allows an app which implements the {@link android.telecom.InCallService InCallService} API to be eligible to be enabled as a calling companion app. This means that the Telecom framework will bind to the app's InCallService implementation when there are calls active. The app can use the InCallService API to view information about calls on the system and control these calls. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "CALL_PHONE",
    "fullPermissionId": "android.permission.CALL_PHONE",
    "description": "Allows an application to initiate a phone call without going through the Dialer user interface for the user to confirm the call. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "CALL_PRIVILEGED",
    "fullPermissionId": "android.permission.CALL_PRIVILEGED",
    "description": "Allows an application to call any phone number, including emergency numbers, without going through the Dialer user interface for the user to confirm the call being placed. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "CAMERA",
    "fullPermissionId": "android.permission-group.CAMERA",
    "description": "Required to be able to access the camera device. <p>This will automatically enforce the <a href=\"{@docRoot}guide/topics/manifest/uses-feature-element.html\"> uses-feature</a> manifest element for <em>all</em> camera features. If you do not require all camera features or can properly operate if a camera is not available, then you must modify your manifest as appropriate in order to install on devices that don't support all camera features.</p> <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous",
      "instant"
    ]
  },
  {
    "apiLevel": "19",
    "permissionId": "CAPTURE_AUDIO_OUTPUT",
    "fullPermissionId": "android.permission.CAPTURE_AUDIO_OUTPUT",
    "description": "Allows an application to capture audio output. Use the {@code CAPTURE_MEDIA_OUTPUT} permission if only the {@code USAGE_UNKNOWN}), {@code USAGE_MEDIA}) or {@code USAGE_GAME}) usages are intended to be captured. <p>Not for use by third-party applications.</p>",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "CHANGE_COMPONENT_ENABLED_STATE",
    "fullPermissionId": "android.permission.CHANGE_COMPONENT_ENABLED_STATE",
    "description": "Allows an application to change whether an application component (other than its own) is enabled or not. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "CHANGE_CONFIGURATION",
    "fullPermissionId": "android.permission.CHANGE_CONFIGURATION",
    "description": "Allows an application to modify the current configuration, such as locale.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "CHANGE_NETWORK_STATE",
    "fullPermissionId": "android.permission.CHANGE_NETWORK_STATE",
    "description": "Allows applications to change network connectivity state. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "4",
    "permissionId": "CHANGE_WIFI_MULTICAST_STATE",
    "fullPermissionId": "android.permission.CHANGE_WIFI_MULTICAST_STATE",
    "description": "Allows applications to enter Wi-Fi Multicast mode. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "CHANGE_WIFI_STATE",
    "fullPermissionId": "android.permission.CHANGE_WIFI_STATE",
    "description": "Allows applications to change Wi-Fi connectivity state. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "CLEAR_APP_CACHE",
    "fullPermissionId": "android.permission.CLEAR_APP_CACHE",
    "description": "Allows an application to clear the caches of all installed applications on the device. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "34",
    "permissionId": "CONFIGURE_WIFI_DISPLAY",
    "fullPermissionId": "android.permission.CONFIGURE_WIFI_DISPLAY",
    "description": "Allows an application to configure and connect to Wifi displays @hide",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "CONTROL_LOCATION_UPDATES",
    "fullPermissionId": "android.permission.CONTROL_LOCATION_UPDATES",
    "description": "Allows enabling/disabling location update notifications from the radio. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "34",
    "permissionId": "CREDENTIAL_MANAGER_QUERY_CANDIDATE_CREDENTIALS",
    "description": "Allows a browser to invoke the set of query apis to get metadata about credential candidates prepared during the CredentialManager.prepareGetCredential API. Protection level: normal"
  },
  {
    "apiLevel": "34",
    "permissionId": "CREDENTIAL_MANAGER_SET_ALLOWED_PROVIDERS",
    "description": "Allows specifying candidate credential providers to be queried in Credential Manager get flows, or to be preferred as a default in the Credential Manager create flows. Protection level: normal"
  },
  {
    "apiLevel": "34",
    "permissionId": "CREDENTIAL_MANAGER_SET_ORIGIN",
    "description": "Allows a browser to invoke credential manager APIs on behalf of another RP. Protection level: normal"
  },
  {
    "apiLevel": "1",
    "permissionId": "DELETE_CACHE_FILES",
    "fullPermissionId": "android.permission.DELETE_CACHE_FILES",
    "description": "Old permission for deleting an app's cache files, no longer used, but signals for us to quietly ignore calls instead of throwing an exception.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "DELETE_PACKAGES",
    "fullPermissionId": "android.permission.DELETE_PACKAGES",
    "description": "Allows an application to delete packages. <p>Not for use by third-party applications. <p>Starting in {@link android.os.Build.VERSION_CODES#N}, user confirmation is requested when the application deleting the package is not the same application that installed the package.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "DELIVER_COMPANION_MESSAGES",
    "description": "Allows an application to deliver companion messages to system"
  },
  {
    "apiLevel": "34",
    "permissionId": "DETECT_SCREEN_CAPTURE",
    "description": "Allows an application to get notified when a screen capture of its windows is attempted. Protection level: normal"
  },
  {
    "apiLevel": "35",
    "permissionId": "DETECT_SCREEN_RECORDING",
    "description": "Allows an application to get notified when it is being recorded. Protection level: normal"
  },
  {
    "apiLevel": "1",
    "permissionId": "DIAGNOSTIC",
    "fullPermissionId": "android.permission.DIAGNOSTIC",
    "description": "Allows applications to RW to diagnostic resources. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "DISABLE_KEYGUARD",
    "fullPermissionId": "android.permission.DISABLE_KEYGUARD",
    "description": "Allows applications to disable the keyguard if it is not secure. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "DUMP",
    "fullPermissionId": "android.permission.DUMP",
    "description": "Allows an application to retrieve state dump information from system services. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "34",
    "permissionId": "ENFORCE_UPDATE_OWNERSHIP",
    "description": "Allows an application to indicate via PackageInstaller.SessionParams.setRequestUpdateOwnership(boolean) that it has the intention of becoming the update owner. Protection level: normal"
  },
  {
    "apiLevel": "34",
    "permissionId": "EXECUTE_APP_ACTION",
    "description": "Allows an assistive application to perform actions on behalf of users inside of applications. For now, this permission is only granted to the Assistant application selected by the user. Protection level: internal|role"
  },
  {
    "apiLevel": "36",
    "permissionId": "EXECUTE_APP_FUNCTIONS",
    "description": "Allows an application to perform actions on behalf of users inside of applications. This permission is currently only granted to privileged system apps. Protection level: internal|privileged"
  },
  {
    "apiLevel": "1",
    "permissionId": "EXPAND_STATUS_BAR",
    "fullPermissionId": "android.permission.EXPAND_STATUS_BAR",
    "description": "Allows an application to expand or collapse the status bar. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "FACTORY_TEST",
    "fullPermissionId": "android.permission.FACTORY_TEST",
    "description": "Run as a manufacturer test application, running as the root user. Only available when the device is running in manufacturer test mode. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "28",
    "permissionId": "FOREGROUND_SERVICE",
    "fullPermissionId": "android.permission.FOREGROUND_SERVICE",
    "description": "Allows a regular application to use {@link android.app.Service#startForeground Service.startForeground}. <p>Protection level: normal",
    "protectionLevel": [
      "normal",
      "instant"
    ]
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_CAMERA",
    "description": "Allows a regular application to use Service.startForeground with the type \"camera\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_CONNECTED_DEVICE",
    "description": "Allows a regular application to use Service.startForeground with the type \"connectedDevice\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_DATA_SYNC",
    "description": "Allows a regular application to use Service.startForeground with the type \"dataSync\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_HEALTH",
    "description": "Allows a regular application to use Service.startForeground with the type \"health\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_LOCATION",
    "description": "Allows a regular application to use Service.startForeground with the type \"location\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_MEDIA_PLAYBACK",
    "description": "Allows a regular application to use Service.startForeground with the type \"mediaPlayback\". Protection level: normal|instant"
  },
  {
    "apiLevel": "35",
    "permissionId": "FOREGROUND_SERVICE_MEDIA_PROCESSING",
    "description": "Allows a regular application to use Service.startForeground with the type \"mediaProcessing\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_MEDIA_PROJECTION",
    "description": "Allows a regular application to use Service.startForeground with the type \"mediaProjection\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_MICROPHONE",
    "description": "Allows a regular application to use Service.startForeground with the type \"microphone\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_PHONE_CALL",
    "description": "Allows a regular application to use Service.startForeground with the type \"phoneCall\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_REMOTE_MESSAGING",
    "description": "Allows a regular application to use Service.startForeground with the type \"remoteMessaging\". Protection level: normal|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_SPECIAL_USE",
    "description": "Allows a regular application to use Service.startForeground with the type \"specialUse\". Protection level: normal|appop|instant"
  },
  {
    "apiLevel": "34",
    "permissionId": "FOREGROUND_SERVICE_SYSTEM_EXEMPTED",
    "description": "Allows a regular application to use Service.startForeground with the type \"systemExempted\". Apps are allowed to use this type only in the use cases listed in ServiceInfo.FOREGROUND_SERVICE_TYPE_SYSTEM_EXEMPTED. Protection level: normal|instant"
  },
  {
    "apiLevel": "1",
    "permissionId": "GET_ACCOUNTS",
    "fullPermissionId": "android.permission.GET_ACCOUNTS",
    "description": "Allows access to the list of accounts in the Accounts Service. <p class=\"note\"><strong>Note:</strong> Beginning with Android 6.0 (API level 23), if an app shares the signature of the authenticator that manages an account, it does not need <code>\"GET_ACCOUNTS\"</code> permission to read information about that account. On Android 5.1 and lower, all apps need <code>\"GET_ACCOUNTS\"</code> permission to read information about any account.</p> <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "GET_ACCOUNTS_PRIVILEGED",
    "fullPermissionId": "android.permission.GET_ACCOUNTS_PRIVILEGED",
    "description": "Allows access to the list of accounts in the Accounts Service.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "GET_PACKAGE_SIZE",
    "fullPermissionId": "android.permission.GET_PACKAGE_SIZE",
    "description": "Allows an application to find out the space used by any package. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "GET_TASKS",
    "fullPermissionId": "android.permission.GET_TASKS",
    "description": "@deprecated No longer enforced.",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "4",
    "permissionId": "GLOBAL_SEARCH",
    "fullPermissionId": "android.permission.GLOBAL_SEARCH",
    "description": "This permission can be used on content providers to allow the global search system to access their data. Typically it used when the provider has some permissions protecting it (which global search would not be expected to hold), and added as a read-only permission to the path in the provider where global search queries are performed. This permission can not be held by regular applications; it is used by applications to protect themselves from everyone else besides global search.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "HIDE_OVERLAY_WINDOWS",
    "description": "Allows an app to prevent non-system-overlay windows from being drawn on top of it"
  },
  {
    "apiLevel": "31",
    "permissionId": "HIGH_SAMPLING_RATE_SENSORS",
    "description": "Allows an app to access sensor data with a sampling rate greater than 200 Hz. Protection level: normal"
  },
  {
    "apiLevel": "4",
    "permissionId": "INSTALL_LOCATION_PROVIDER",
    "fullPermissionId": "android.permission.INSTALL_LOCATION_PROVIDER",
    "description": "Allows an application to install a location provider into the Location Manager. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "INSTALL_PACKAGES",
    "fullPermissionId": "android.permission.INSTALL_PACKAGES",
    "description": "Allows an application to install packages. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "19",
    "permissionId": "INSTALL_SHORTCUT",
    "fullPermissionId": "com.android.launcher.permission.INSTALL_SHORTCUT",
    "description": "Allows an application to install a shortcut in Launcher. <p>In Android O (API level 26) and higher, the <code>INSTALL_SHORTCUT</code> broadcast no longer has any effect on your app because it's a private, implicit broadcast. Instead, you should create an app shortcut by using the {@link android.content.pm.ShortcutManager#requestPinShortcut requestPinShortcut()} method from the {@link android.content.pm.ShortcutManager} class. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "26",
    "permissionId": "INSTANT_APP_FOREGROUND_SERVICE",
    "fullPermissionId": "android.permission.INSTANT_APP_FOREGROUND_SERVICE",
    "description": "Allows an instant app to create foreground services.",
    "protectionLevel": [
      "signature",
      "development",
      "instant",
      "appop"
    ]
  },
  {
    "apiLevel": "30",
    "permissionId": "INTERACT_ACROSS_PROFILES",
    "fullPermissionId": "android.permission.INTERACT_ACROSS_PROFILES",
    "description": "@SystemApi Allows an application to start its own activities, but on a different profile associated with the user. For example, an application running on the main profile of a user can start an activity on a managed profile of that user. This permission is not available to third party applications. @hide",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "INTERNET",
    "fullPermissionId": "android.permission.INTERNET",
    "description": "Allows applications to open network sockets. <p>Protection level: normal",
    "protectionLevel": [
      "normal",
      "instant"
    ]
  },
  {
    "apiLevel": "8",
    "permissionId": "KILL_BACKGROUND_PROCESSES",
    "fullPermissionId": "android.permission.KILL_BACKGROUND_PROCESSES",
    "description": "Allows an application to call {@link android.app.ActivityManager#killBackgroundProcesses}. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "34",
    "permissionId": "LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE",
    "description": "Allows an application to capture screen content to perform a screenshot using the intent action Intent.ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE. Protection level: internal|role Intended for use by ROLE_NOTES only."
  },
  {
    "apiLevel": "32",
    "permissionId": "LAUNCH_MULTI_PANE_SETTINGS_DEEP_LINK",
    "description": "An application needs this permission for Settings.ACTION_SETTINGS_EMBED_DEEP_LINK_ACTIVITY to show its Activity embedded in Settings app."
  },
  {
    "apiLevel": "30",
    "permissionId": "LOADER_USAGE_STATS",
    "description": "Allows a data loader to read a package's access logs. The access logs contain the set of pages referenced over time. Declaring the permission implies intention to use the API and the user of the device can grant permission through the Settings application. Protection level: signature|privileged|appop A data loader has to be the one which provides data to install an app. A data loader has to have both permission:LOADER_USAGE_STATS AND appop:LOADER_USAGE_STATS allowed to be able to access the read logs."
  },
  {
    "apiLevel": "18",
    "permissionId": "LOCATION_HARDWARE",
    "fullPermissionId": "android.permission.LOCATION_HARDWARE",
    "description": "Allows an application to use location features in hardware, such as the geofencing api. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_LOCK_STATE",
    "description": "Allows financed device kiosk apps to perform actions on the Device Lock service Protection level: internal|role Intended for use by the FINANCED_DEVICE_KIOSK role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_ACCESSIBILITY",
    "description": "Allows an application to manage policy related to accessibility. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_ACCOUNT_MANAGEMENT",
    "description": "Allows an application to set policy related to account management. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_ACROSS_USERS",
    "description": "Allows an application to set device policies outside the current user that are required for securing device ownership without accessing user data. Holding this permission allows the use of other held MANAGE_DEVICE_POLICY_* permissions across all users on the device provided they do not grant access to user data. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL",
    "description": "Allows an application to set device policies outside the current user. Fuller form of MANAGE_DEVICE_POLICY_ACROSS_USERS that removes the restriction on accessing user data. Holding this permission allows the use of any other held MANAGE_DEVICE_POLICY_* permissions across all users on the device. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_ACROSS_USERS_SECURITY_CRITICAL",
    "description": "Allows an application to set device policies outside the current user that are critical for securing data within the current user. Holding this permission allows the use of other held MANAGE_DEVICE_POLICY_* permissions across all users on the device provided they are required for securing data within the current user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_AIRPLANE_MODE",
    "description": "Allows an application to set policy related to airplane mode. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_APPS_CONTROL",
    "description": "Allows an application to manage policy regarding modifying applications. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "36",
    "permissionId": "MANAGE_DEVICE_POLICY_APP_FUNCTIONS",
    "description": "Allows an application to manage policy related to AppFunctions. Protection level: internal|role"
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_APP_RESTRICTIONS",
    "description": "Allows an application to manage application restrictions. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_APP_USER_DATA",
    "description": "Allows an application to manage policy related to application user data. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "35",
    "permissionId": "MANAGE_DEVICE_POLICY_ASSIST_CONTENT",
    "description": "Allows an application to set policy related to sending assist content to a privileged app such as the Assistant app. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_AUDIO_OUTPUT",
    "description": "Allows an application to set policy related to audio output. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_AUTOFILL",
    "description": "Allows an application to set policy related to autofill. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_BACKUP_SERVICE",
    "description": "Allows an application to manage backup service policy. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "35",
    "permissionId": "MANAGE_DEVICE_POLICY_BLOCK_UNINSTALL",
    "description": "Allows an application to manage policy related to block package uninstallation. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_BLUETOOTH",
    "description": "Allows an application to set policy related to bluetooth. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_BUGREPORT",
    "description": "Allows an application to request bugreports with user consent. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_CALLS",
    "description": "Allows an application to manage calling policy. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_CAMERA",
    "description": "Allows an application to set policy related to restricting a user's ability to use or enable and disable the camera. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "35",
    "permissionId": "MANAGE_DEVICE_POLICY_CAMERA_TOGGLE",
    "description": "Allows an application to manage policy related to camera toggle. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_CERTIFICATES",
    "description": "Allows an application to set policy related to certificates. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_COMMON_CRITERIA_MODE",
    "description": "Allows an application to manage policy related to common criteria mode. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "35",
    "permissionId": "MANAGE_DEVICE_POLICY_CONTENT_PROTECTION",
    "description": "Allows an application to manage policy related to content protection. Protection level: internal|role"
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_DEBUGGING_FEATURES",
    "description": "Allows an application to manage debugging features policy. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_DEFAULT_SMS",
    "description": "Allows an application to set policy related to the default sms application. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_DEVICE_IDENTIFIERS",
    "description": "Allows an application to manage policy related to device identifiers. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_DISPLAY",
    "description": "Allows an application to set policy related to the display. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_FACTORY_RESET",
    "description": "Allows an application to set policy related to factory reset. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_FUN",
    "description": "Allows an application to set policy related to fun. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_INPUT_METHODS",
    "description": "Allows an application to set policy related to input methods. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_INSTALL_UNKNOWN_SOURCES",
    "description": "Allows an application to manage installing from unknown sources policy. MANAGE_SECURITY_CRITICAL_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_KEEP_UNINSTALLED_PACKAGES",
    "description": "Allows an application to set policy related to keeping uninstalled packages. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_KEYGUARD",
    "description": "Allows an application to manage policy related to keyguard. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_SECURITY_CRITICAL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_LOCALE",
    "description": "Allows an application to set policy related to locale. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_LOCATION",
    "description": "Allows an application to set policy related to location. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_LOCK",
    "description": "Allows an application to lock a profile or the device with the appropriate cross-user permission. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS",
    "description": "Allows an application to set policy related to lock credentials. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_SECURITY_CRITICAL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_LOCK_TASK",
    "description": "Allows an application to manage lock task policy. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "35",
    "permissionId": "MANAGE_DEVICE_POLICY_MANAGED_SUBSCRIPTIONS",
    "description": "Allows an application to set policy related to subscriptions downloaded by an admin. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_METERED_DATA",
    "description": "Allows an application to manage policy related to metered data. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_MICROPHONE",
    "description": "Allows an application to set policy related to restricting a user's ability to use or enable and disable the microphone. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "35",
    "permissionId": "MANAGE_DEVICE_POLICY_MICROPHONE_TOGGLE",
    "description": "Allows an application to manage policy related to microphone toggle. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_MOBILE_NETWORK",
    "description": "Allows an application to set policy related to mobile networks. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_MODIFY_USERS",
    "description": "Allows an application to manage policy preventing users from modifying users. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_MTE",
    "description": "Allows an application to manage policy related to the Memory Tagging Extension (MTE). Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_NEARBY_COMMUNICATION",
    "description": "Allows an application to set policy related to nearby communications (e.g.&nbsp;Beam and nearby streaming). Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_NETWORK_LOGGING",
    "description": "Allows an application to set policy related to network logging. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY",
    "description": "Allows an application to manage the identity of the managing organization. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_OVERRIDE_APN",
    "description": "Allows an application to set policy related to override APNs. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_PACKAGE_STATE",
    "description": "Allows an application to set policy related to hiding and suspending packages. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_PHYSICAL_MEDIA",
    "description": "Allows an application to set policy related to physical media. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_PRINTING",
    "description": "Allows an application to set policy related to printing. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_PRIVATE_DNS",
    "description": "Allows an application to set policy related to private DNS. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_PROFILES",
    "description": "Allows an application to set policy related to profiles. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_PROFILE_INTERACTION",
    "description": "Allows an application to set policy related to interacting with profiles (e.g.&nbsp;Disallowing cross-profile copy and paste). Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_PROXY",
    "description": "Allows an application to set a network-independent global HTTP proxy. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_QUERY_SYSTEM_UPDATES",
    "description": "Allows an application query system updates. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_RESET_PASSWORD",
    "description": "Allows an application to force set a new device unlock password or a managed profile challenge on current user. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_RESTRICT_PRIVATE_DNS",
    "description": "Allows an application to set policy related to restricting the user from configuring private DNS. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_RUNTIME_PERMISSIONS",
    "description": "Allows an application to set the grant state of runtime permissions on packages. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_RUN_IN_BACKGROUND",
    "description": "Allows an application to set policy related to users running in the background. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SAFE_BOOT",
    "description": "Allows an application to manage safe boot policy. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SCREEN_CAPTURE",
    "description": "Allows an application to set policy related to screen capture. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SCREEN_CONTENT",
    "description": "Allows an application to set policy related to the usage of the contents of the screen. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SECURITY_LOGGING",
    "description": "Allows an application to set policy related to security logging. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SETTINGS",
    "description": "Allows an application to set policy related to settings. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SMS",
    "description": "Allows an application to set policy related to sms. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_STATUS_BAR",
    "description": "Allows an application to set policy related to the status bar. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE",
    "description": "Allows an application to set support messages for when a user action is affected by an active policy. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SUSPEND_PERSONAL_APPS",
    "description": "Allows an application to set policy related to suspending personal apps. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SYSTEM_APPS",
    "description": "Allows an application to manage policy related to system apps. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SYSTEM_DIALOGS",
    "description": "Allows an application to set policy related to system dialogs. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_SYSTEM_UPDATES",
    "description": "Allows an application to set policy related to system updates. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "36",
    "permissionId": "MANAGE_DEVICE_POLICY_THREAD_NETWORK",
    "description": "Allows an application to set policy related to Thread network. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_TIME",
    "description": "Allows an application to manage device policy relating to time. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_USB_DATA_SIGNALLING",
    "description": "Allows an application to set policy related to usb data signalling. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_USB_FILE_TRANSFER",
    "description": "Allows an application to set policy related to usb file transfers. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_USERS",
    "description": "Allows an application to set policy related to users. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_VPN",
    "description": "Allows an application to set policy related to VPNs. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_WALLPAPER",
    "description": "Allows an application to set policy related to the wallpaper. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_WIFI",
    "description": "Allows an application to set policy related to Wifi. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_WINDOWS",
    "description": "Allows an application to set policy related to windows. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "34",
    "permissionId": "MANAGE_DEVICE_POLICY_WIPE_DATA",
    "description": "Allows an application to manage policy related to wiping data. Manifest.permission.MANAGE_DEVICE_POLICY_ACROSS_USERS is required to call APIs protected by this permission on users different to the calling user. Protection level: internal|role Intended for use by the DEVICE_POLICY_MANAGEMENT role only."
  },
  {
    "apiLevel": "19",
    "permissionId": "MANAGE_DOCUMENTS",
    "fullPermissionId": "android.permission.MANAGE_DOCUMENTS",
    "description": "Allows an application to manage access to documents, usually as part of a document picker. <p>This permission should <em>only</em> be requested by the platform document management app. This permission cannot be granted to third-party apps.",
    "protectionLevel": [
      "signature",
      "documenter"
    ]
  },
  {
    "apiLevel": "30",
    "permissionId": "MANAGE_EXTERNAL_STORAGE",
    "description": "Allows an application a broad access to external storage in scoped storage. Intended to be used by few apps that need to manage files on behalf of the users. Protection level: signature|appop|preinstalled"
  },
  {
    "apiLevel": "31",
    "permissionId": "MANAGE_MEDIA",
    "description": "Allows an application to modify and delete media files on this device or any connected storage device without user confirmation. Applications must already be granted the READ_EXTERNAL_STORAGE or MANAGE_EXTERNAL_STORAGE} permissions for this permission to take effect. Even if applications are granted this permission, if applications want to modify or delete media files, they also must get the access by calling )\">MediaStore.createWriteRequest(ContentResolver, Collection), )\">MediaStore.createDeleteRequest(ContentResolver, Collection), or ,%20boolean)\">MediaStore.createTrashRequest(ContentResolver, Collection, boolean). This permission doesn't give read or write access directly. It only prevents the user confirmation dialog for these requests. If applications are not granted ACCESS_MEDIA_LOCATION, the system also pops up the user confirmation dialog for the write request. Protection level: signature|appop|preinstalled"
  },
  {
    "apiLevel": "31",
    "permissionId": "MANAGE_ONGOING_CALLS",
    "description": "Allows to query ongoing call details and manage ongoing calls Protection level: signature|appop"
  },
  {
    "apiLevel": "26",
    "permissionId": "MANAGE_OWN_CALLS",
    "fullPermissionId": "android.permission.MANAGE_OWN_CALLS",
    "description": "Allows a calling application which manages it own calls through the self-managed {@link android.telecom.ConnectionService} APIs. See {@link android.telecom.PhoneAccount#CAPABILITY_SELF_MANAGED} for more information on the self-managed ConnectionService APIs. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "MANAGE_WIFI_INTERFACES",
    "description": "Allows applications to get notified when a Wi-Fi interface request cannot be satisfied without tearing down one or more other interfaces, and provide a decision whether to approve the request or reject it. Not for use by third-party applications."
  },
  {
    "apiLevel": "33",
    "permissionId": "MANAGE_WIFI_NETWORK_SELECTION",
    "description": "This permission is used to let OEMs grant their trusted app access to a subset of privileged wifi APIs to improve wifi performance. Allows applications to manage Wi-Fi network selection related features such as enable or disable global auto-join, modify connectivity scan intervals, and approve Wi-Fi Direct connections. Not for use by third-party applications."
  },
  {
    "apiLevel": "1",
    "permissionId": "MASTER_CLEAR",
    "fullPermissionId": "android.permission.MASTER_CLEAR",
    "description": "Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "19",
    "permissionId": "MEDIA_CONTENT_CONTROL",
    "fullPermissionId": "android.permission.MEDIA_CONTENT_CONTROL",
    "description": "Allows an application to know what content is playing and control its playback. <p>Not for use by third-party applications due to privacy of media consumption</p>",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "35",
    "permissionId": "MEDIA_ROUTING_CONTROL",
    "description": "Allows an application to control the routing of media apps. Only for use by role COMPANION_DEVICE_WATCH"
  },
  {
    "apiLevel": "1",
    "permissionId": "MODIFY_AUDIO_SETTINGS",
    "fullPermissionId": "android.permission.MODIFY_AUDIO_SETTINGS",
    "description": "Allows an application to modify global audio settings. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "MODIFY_PHONE_STATE",
    "fullPermissionId": "android.permission.MODIFY_PHONE_STATE",
    "description": "Allows modification of the telephony state - power on, mmi, etc. Does not include placing calls. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "3",
    "permissionId": "MOUNT_FORMAT_FILESYSTEMS",
    "fullPermissionId": "android.permission.MOUNT_FORMAT_FILESYSTEMS",
    "description": "Allows formatting file systems for removable storage. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "MOUNT_UNMOUNT_FILESYSTEMS",
    "fullPermissionId": "android.permission.MOUNT_UNMOUNT_FILESYSTEMS",
    "description": "Allows mounting and unmounting file systems for removable storage. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "NEARBY_WIFI_DEVICES",
    "description": "Required to be able to advertise and connect to nearby devices via Wi-Fi. Protection level: dangerous"
  },
  {
    "apiLevel": "9",
    "permissionId": "NFC",
    "fullPermissionId": "android.permission.NFC",
    "description": "Allows applications to perform I/O operations over NFC. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "30",
    "permissionId": "NFC_PREFERRED_PAYMENT_INFO",
    "description": "Allows applications to receive NFC preferred payment service information. Protection level: normal"
  },
  {
    "apiLevel": "28",
    "permissionId": "NFC_TRANSACTION_EVENT",
    "fullPermissionId": "android.permission.NFC_TRANSACTION_EVENT",
    "description": "Allows applications to receive NFC transaction events. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "OVERRIDE_WIFI_CONFIG",
    "fullPermissionId": "android.permission.OVERRIDE_WIFI_CONFIG",
    "description": "@SystemApi @hide Allows an application to modify any wifi configuration, even if created by another application. Once reconfigured the original creator cannot make any further modifications. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "PACKAGE_USAGE_STATS",
    "fullPermissionId": "android.permission.PACKAGE_USAGE_STATS",
    "description": "Allows an application to collect component usage statistics <p>Declaring the permission implies intention to use the API and the user of the device can grant permission through the Settings application.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development",
      "appop"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "PERSISTENT_ACTIVITY",
    "fullPermissionId": "android.permission.PERSISTENT_ACTIVITY",
    "description": "@deprecated This functionality will be removed in the future; please do not use. Allow an application to make its activities persistent.",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "POST_NOTIFICATIONS",
    "description": "Allows an app to post notifications Protection level: dangerous"
  },
  {
    "apiLevel": "1",
    "permissionId": "PROCESS_OUTGOING_CALLS",
    "fullPermissionId": "android.permission.PROCESS_OUTGOING_CALLS",
    "description": "Allows an application to see the number being dialed during an outgoing call with the option to redirect the call to a different number or abort the call altogether. <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}. @deprecated Applications should use {@link android.telecom.CallRedirectionService} instead of the {@link android.content.Intent#ACTION_NEW_OUTGOING_CALL} broadcast.",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "34",
    "permissionId": "PROVIDE_OWN_AUTOFILL_SUGGESTIONS",
    "description": "Allows an application to display its suggestions using the autofill framework. For now, this permission is only granted to the Browser application. Protection level: internal|role"
  },
  {
    "apiLevel": "34",
    "permissionId": "PROVIDE_REMOTE_CREDENTIALS",
    "description": "Allows an application to be able to store and retrieve credentials from a remote device. Protection level: signature|privileged|role"
  },
  {
    "apiLevel": "36",
    "permissionId": "QUERY_ADVANCED_PROTECTION_MODE",
    "description": "Allows an application to query the device's advanced protection mode status."
  },
  {
    "apiLevel": "30",
    "permissionId": "QUERY_ALL_PACKAGES",
    "description": "Allows query of any normal app on the device, regardless of manifest declarations. Protection level: normal"
  },
  {
    "apiLevel": "36",
    "permissionId": "RANGING",
    "description": "Required to be able to range to devices using generic ranging module. Protection level: dangerous"
  },
  {
    "apiLevel": "33",
    "permissionId": "READ_ASSISTANT_APP_SEARCH_DATA",
    "description": "Allows an application to query over global data in AppSearch that's visible to the ASSISTANT role."
  },
  {
    "apiLevel": "33",
    "permissionId": "READ_BASIC_PHONE_STATE",
    "description": "Allows read only access to phone state with a non dangerous permission, including the information like cellular network type, software version."
  },
  {
    "apiLevel": "1",
    "permissionId": "READ_CALENDAR",
    "description": "Allows an application to read the user's calendar data. Protection level: dangerous"
  },
  {
    "apiLevel": "16",
    "permissionId": "READ_CALL_LOG",
    "fullPermissionId": "android.permission.READ_CALL_LOG",
    "description": "Allows an application to read the user's call log. <p class=\"note\"><strong>Note:</strong> If your app uses the {@link #READ_CONTACTS} permission and <em>both</em> your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#min\">{@code minSdkVersion}</a> and <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> values are set to 15 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> is 16 or higher.</p> <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}.",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "36",
    "permissionId": "READ_COLOR_ZONES",
    "description": "Allows an application to read the aggregated color zones on the screen for use cases like TV ambient backlight usages. Protection level: normal"
  },
  {
    "apiLevel": "1",
    "permissionId": "READ_CONTACTS",
    "description": "Allows an application to read the user's contacts data. Protection level: dangerous"
  },
  {
    "apiLevel": "35",
    "permissionId": "READ_DROPBOX_DATA",
    "description": "Allows an application to access the data in Dropbox. Not for use by third-party applications."
  },
  {
    "apiLevel": "16",
    "permissionId": "READ_EXTERNAL_STORAGE",
    "description": "Allows an application to read from external storage. Note: Starting in API level 33, this permission has no effect. If your app accesses other apps' media files, request one or more of these permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO, READ_MEDIA_AUDIO. Learn more about the storage permissions that are associated with media files. This permission is enforced starting in API level 19. Before API level 19, this permission is not enforced and all apps still have access to read from external storage. You can test your app with the permission enforced by enabling Protect USB storage under Developer options in the Settings app on a device running Android 4.1 or higher. Also starting in API level 19, this permission is not required to read or write files in your application-specific directories returned by Context.getExternalFilesDir(String) and Context.getExternalCacheDir(). Starting in API level 29, apps don't need to request this permission to access files in their app-specific directory on external storage, or their own files in the MediaStore. Apps shouldn't request this permission unless they need to access other apps' files in the MediaStore. Read more about these changes in the scoped storage section of the developer documentation. If both your minSdkVersion and targetSdkVersion values are set to 3 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your targetSdkVersion is 4 or higher. This is a soft restricted permission which cannot be held by an app it its full form until the installer on record allowlists the permission. Specifically, if the permission is allowlisted the holder app can access external storage and the visual and aural media collections while if the permission is not allowlisted the holder app can only access to the visual and aural medial collections. Also the permission is immutably restricted meaning that the allowlist state can be specified only at install time and cannot change until the app is installed. For more details see )\">PackageInstaller.SessionParams.setWhitelistedRestrictedPermissions(Set). Protection level: dangerous"
  },
  {
    "apiLevel": "33",
    "permissionId": "READ_HOME_APP_SEARCH_DATA",
    "description": "Allows an application to query over global data in AppSearch that's visible to the HOME role."
  },
  {
    "apiLevel": "1",
    "permissionId": "READ_INPUT_STATE",
    "fullPermissionId": "android.permission.READ_INPUT_STATE",
    "description": "Allows an application to retrieve the current state of keys and switches. <p>Not for use by third-party applications. @deprecated The API that used this permission has been removed.",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "READ_LOGS",
    "fullPermissionId": "android.permission.READ_LOGS",
    "description": "Allows an application to read the low-level system log files. <p>Not for use by third-party applications, because Log entries can contain the user's private information.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "READ_MEDIA_AUDIO",
    "description": "Allows an application to read audio files from external storage. This permission is enforced starting in API level Build.VERSION_CODES.TIRAMISU. An app which targets Build.VERSION_CODES.TIRAMISU or higher and needs to read audio files from external storage must hold this permission; READ_EXTERNAL_STORAGE is not required. For apps with a targetSdkVersion of Build.VERSION_CODES.S_V2 or lower, the READ_EXTERNAL_STORAGE permission is required, instead, to read audio files. Protection level: dangerous"
  },
  {
    "apiLevel": "33",
    "permissionId": "READ_MEDIA_IMAGES",
    "description": "Allows an application to read image files from external storage. This permission is enforced starting in API level Build.VERSION_CODES.TIRAMISU. An app which targets Build.VERSION_CODES.TIRAMISU or higher and needs to read image files from external storage must hold this permission; READ_EXTERNAL_STORAGE is not required. For apps with a targetSdkVersion of Build.VERSION_CODES.S_V2 or lower, the READ_EXTERNAL_STORAGE permission is required, instead, to read image files. Protection level: dangerous"
  },
  {
    "apiLevel": "33",
    "permissionId": "READ_MEDIA_VIDEO",
    "description": "Allows an application to read video files from external storage. This permission is enforced starting in API level Build.VERSION_CODES.TIRAMISU. An app which targets Build.VERSION_CODES.TIRAMISU or higher and needs to read video files from external storage must hold this permission; READ_EXTERNAL_STORAGE is not required. For apps with a targetSdkVersion of Build.VERSION_CODES.S_V2 or lower, the READ_EXTERNAL_STORAGE permission is required, instead, to read video files. Protection level: dangerous"
  },
  {
    "apiLevel": "34",
    "permissionId": "READ_MEDIA_VISUAL_USER_SELECTED",
    "description": "Allows an application to read image or video files from external storage that a user has selected via the permission prompt photo picker. Apps can check this permission to verify that a user has decided to use the photo picker, instead of granting access to READ_MEDIA_IMAGES or READ_MEDIA_VIDEO. It does not prevent apps from accessing the standard photo picker manually. This permission should be requested alongside READ_MEDIA_IMAGES and/or READ_MEDIA_VIDEO, depending on which type of media is desired. This permission will be automatically added to an app's manifest if the app requests READ_MEDIA_IMAGES, READ_MEDIA_VIDEO, or ACCESS_MEDIA_LOCATION regardless of target SDK. If an app does not request this permission, then the grant dialog will return `PERMISSION_GRANTED` for READ_MEDIA_IMAGES and/or READ_MEDIA_VIDEO, but the app will only have access to the media selected by the user. This false grant state will persist until the app goes into the background. Protection level: dangerous"
  },
  {
    "apiLevel": "33",
    "permissionId": "READ_NEARBY_STREAMING_POLICY",
    "description": "Allows an application to read nearby streaming policy. The policy controls whether to allow the device to stream its notifications and apps to nearby devices. Applications that are not the device owner will need this permission to call DevicePolicyManager.getNearbyNotificationStreamingPolicy() or DevicePolicyManager.getNearbyAppStreamingPolicy()."
  },
  {
    "apiLevel": "26",
    "permissionId": "READ_PHONE_NUMBERS",
    "fullPermissionId": "android.permission.READ_PHONE_NUMBERS",
    "description": "Allows read access to the device's phone number(s). This is a subset of the capabilities granted by {@link #READ_PHONE_STATE} but is exposed to instant applications. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous",
      "instant"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "READ_PHONE_STATE",
    "description": "Allows read only access to phone state, including the current cellular network information, the status of any ongoing calls, and a list of any PhoneAccounts registered on the device. Note: If both your minSdkVersion and targetSdkVersion values are set to 3 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your targetSdkVersion is 4 or higher. Protection level: dangerous"
  },
  {
    "apiLevel": "30",
    "permissionId": "READ_PRECISE_PHONE_STATE",
    "fullPermissionId": "android.permission.READ_PRECISE_PHONE_STATE",
    "description": "Allows read only access to precise phone state. @hide Pending API council approval",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "READ_SMS",
    "fullPermissionId": "android.permission.READ_SMS",
    "description": "Allows an application to read SMS messages. <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}.",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "READ_SYNC_SETTINGS",
    "fullPermissionId": "android.permission.READ_SYNC_SETTINGS",
    "description": "Allows applications to read the sync settings. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "READ_SYNC_STATS",
    "fullPermissionId": "android.permission.READ_SYNC_STATS",
    "description": "Allows applications to read the sync stats. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "36",
    "permissionId": "READ_SYSTEM_PREFERENCES",
    "description": "Allows an application to access the Settings Preference services to read settings exposed by the system Settings app and system apps that contribute settings surfaced by the Settings app. This allows the calling application to read settings values through the host application, agnostic of underlying storage."
  },
  {
    "apiLevel": "21",
    "permissionId": "READ_VOICEMAIL",
    "fullPermissionId": "com.android.voicemail.permission.READ_VOICEMAIL",
    "description": "Allows an application to read voicemails in the system. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "REBOOT",
    "fullPermissionId": "android.permission.REBOOT",
    "description": "Required to be able to reboot the device. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "RECEIVE_BOOT_COMPLETED",
    "fullPermissionId": "android.permission.RECEIVE_BOOT_COMPLETED",
    "description": "Allows an application to receive the {@link android.content.Intent#ACTION_BOOT_COMPLETED} that is broadcast after the system finishes booting. If you don't request this permission, you will not receive the broadcast at that time. Though holding this permission does not have any security implications, it can have a negative impact on the user experience by increasing the amount of time it takes the system to start and allowing applications to have themselves running without the user being aware of them. As such, you must explicitly declare your use of this facility to make that visible to the user. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "RECEIVE_MMS",
    "fullPermissionId": "android.permission.RECEIVE_MMS",
    "description": "Allows an application to monitor incoming MMS messages. <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}.",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "RECEIVE_SMS",
    "fullPermissionId": "android.permission.RECEIVE_SMS",
    "description": "Allows an application to receive SMS messages. <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}.",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "RECEIVE_WAP_PUSH",
    "fullPermissionId": "android.permission.RECEIVE_WAP_PUSH",
    "description": "Allows an application to receive WAP push messages. <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}.",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "RECORD_AUDIO",
    "description": "Allows an application to record audio. Protection level: dangerous"
  },
  {
    "apiLevel": "1",
    "permissionId": "REORDER_TASKS",
    "fullPermissionId": "android.permission.REORDER_TASKS",
    "description": "Allows an application to change the Z-order of tasks. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "REQUEST_COMPANION_PROFILE_APP_STREAMING",
    "description": "Allows application to request to be associated with a virtual device capable of streaming Android applications (AssociationRequest.DEVICE_PROFILE_APP_STREAMING) by CompanionDeviceManager. Not for use by third-party applications."
  },
  {
    "apiLevel": "33",
    "permissionId": "REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION",
    "description": "Allows application to request to be associated with a vehicle head unit capable of automotive projection (AssociationRequest.DEVICE_PROFILE_AUTOMOTIVE_PROJECTION) by CompanionDeviceManager. Not for use by third-party applications."
  },
  {
    "apiLevel": "33",
    "permissionId": "REQUEST_COMPANION_PROFILE_COMPUTER",
    "description": "Allows application to request to be associated with a computer to share functionality and/or data with other devices, such as notifications, photos and media (AssociationRequest.DEVICE_PROFILE_COMPUTER) by CompanionDeviceManager. Not for use by third-party applications."
  },
  {
    "apiLevel": "34",
    "permissionId": "REQUEST_COMPANION_PROFILE_GLASSES",
    "description": "Allows app to request to be associated with a device via CompanionDeviceManager as \"glasses\" Protection level: normal"
  },
  {
    "apiLevel": "34",
    "permissionId": "REQUEST_COMPANION_PROFILE_NEARBY_DEVICE_STREAMING",
    "description": "Allows application to request to stream content from an Android host to a nearby device (AssociationRequest.DEVICE_PROFILE_NEARBY_DEVICE_STREAMING) by CompanionDeviceManager. Not for use by third-party applications."
  },
  {
    "apiLevel": "31",
    "permissionId": "REQUEST_COMPANION_PROFILE_WATCH",
    "description": "Allows app to request to be associated with a device via CompanionDeviceManager as a \"watch\" Protection level: normal"
  },
  {
    "apiLevel": "26",
    "permissionId": "REQUEST_COMPANION_RUN_IN_BACKGROUND",
    "fullPermissionId": "android.permission.REQUEST_COMPANION_RUN_IN_BACKGROUND",
    "description": "Allows a companion app to run in the background. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "REQUEST_COMPANION_SELF_MANAGED",
    "description": "Allows an application to create a \"self-managed\" association."
  },
  {
    "apiLevel": "31",
    "permissionId": "REQUEST_COMPANION_START_FOREGROUND_SERVICES_FROM_BACKGROUND",
    "description": "Allows a companion app to start a foreground service from the background. Protection level: normal See also:"
  },
  {
    "apiLevel": "26",
    "permissionId": "REQUEST_COMPANION_USE_DATA_IN_BACKGROUND",
    "fullPermissionId": "android.permission.REQUEST_COMPANION_USE_DATA_IN_BACKGROUND",
    "description": "Allows a companion app to use data in the background. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "26",
    "permissionId": "REQUEST_DELETE_PACKAGES",
    "fullPermissionId": "android.permission.REQUEST_DELETE_PACKAGES",
    "description": "Allows an application to request deleting packages. Apps targeting APIs {@link android.os.Build.VERSION_CODES#P} or greater must hold this permission in order to use {@link android.content.Intent#ACTION_UNINSTALL_PACKAGE} or {@link android.content.pm.PackageInstaller#uninstall}. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "REQUEST_IGNORE_BATTERY_OPTIMIZATIONS",
    "fullPermissionId": "android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS",
    "description": "Permission an application must hold in order to use {@link android.provider.Settings#ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS}. This is a normal permission: an app requesting it will always be granted the permission, without the user needing to approve or see it.",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "23",
    "permissionId": "REQUEST_INSTALL_PACKAGES",
    "fullPermissionId": "android.permission.REQUEST_INSTALL_PACKAGES",
    "description": "Allows an application to request installing packages. Apps targeting APIs greater than 25 must hold this permission in order to use {@link android.content.Intent#ACTION_INSTALL_PACKAGE}. <p>Protection level: signature",
    "protectionLevel": [
      "signature",
      "appop"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE",
    "description": "Allows an application to subscribe to notifications about the presence status change of their associated companion device"
  },
  {
    "apiLevel": "36",
    "permissionId": "REQUEST_OBSERVE_DEVICE_UUID_PRESENCE",
    "description": "Allows an application to subscribe to notifications about the nearby devices' presence status change base on the UUIDs. Not for use by third-party applications."
  },
  {
    "apiLevel": "29",
    "permissionId": "REQUEST_PASSWORD_COMPLEXITY",
    "fullPermissionId": "android.permission.REQUEST_PASSWORD_COMPLEXITY",
    "description": "Allows an application to request the screen lock complexity and prompt users to update the screen lock to a certain complexity level. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "RESTART_PACKAGES",
    "fullPermissionId": "android.permission.RESTART_PACKAGES",
    "description": "@deprecated The {@link android.app.ActivityManager#restartPackage} API is no longer supported.",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "34",
    "permissionId": "RUN_USER_INITIATED_JOBS",
    "description": "Allows applications to use the user-initiated jobs API. For more details see JobInfo.Builder.setUserInitiated(boolean). Protection level: normal"
  },
  {
    "apiLevel": "31",
    "permissionId": "SCHEDULE_EXACT_ALARM",
    "description": "Allows applications to use exact alarm APIs. This is a special access permission that can be revoked by the system or the user. It should only be used to enable user-facing features that require exact alarms. For more details, please go through the associated developer docs. Apps need to target API Build.VERSION_CODES.S or above to be able to request this permission. Note that apps targeting lower API levels do not need this permission to use exact alarm APIs. Apps that hold this permission and target API Build.VERSION_CODES.TIRAMISU and below always stay in the WORKING_SET or lower standby bucket. If your app relies on exact alarms for core functionality, it can instead request USE_EXACT_ALARM once it targets API Build.VERSION_CODES.TIRAMISU. All apps using exact alarms for secondary features (which should still be user facing) should continue using this permission. Protection level: signature|privileged|appop"
  },
  {
    "apiLevel": "18",
    "permissionId": "SEND_RESPOND_VIA_MESSAGE",
    "fullPermissionId": "android.permission.SEND_RESPOND_VIA_MESSAGE",
    "description": "Allows an application (Phone) to send a request to other applications to handle the respond-via-message action during incoming calls. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "SEND_SMS",
    "description": "Allows an application to send SMS messages. Protection level: dangerous This is a hard restricted permission which cannot be held by an app until the installer on record allowlists the permission. For more details see )\">PackageInstaller.SessionParams.setWhitelistedRestrictedPermissions(Set)."
  },
  {
    "apiLevel": "9",
    "permissionId": "SET_ALARM",
    "fullPermissionId": "com.android.alarm.permission.SET_ALARM",
    "description": "Allows an application to broadcast an Intent to set an alarm for the user. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "SET_ALWAYS_FINISH",
    "fullPermissionId": "android.permission.SET_ALWAYS_FINISH",
    "description": "Allows an application to control whether activities are immediately finished when put in the background. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "SET_ANIMATION_SCALE",
    "fullPermissionId": "android.permission.SET_ANIMATION_SCALE",
    "description": "Modify the global animation scaling factor. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "35",
    "permissionId": "SET_BIOMETRIC_DIALOG_ADVANCED",
    "description": "Allows an application to set the advanced features on BiometricDialog (SystemUI), including logo, logo description, and content view with more options button. Not for use by third-party applications."
  },
  {
    "apiLevel": "1",
    "permissionId": "SET_DEBUG_APP",
    "fullPermissionId": "android.permission.SET_DEBUG_APP",
    "description": "Configure an application for debugging. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "SET_PREFERRED_APPLICATIONS",
    "fullPermissionId": "android.permission.SET_PREFERRED_APPLICATIONS",
    "description": "@deprecated No longer useful, see {@link android.content.pm.PackageManager#addPackageToPreferred} for details.",
    "protectionLevel": [
      "signature",
      "installer",
      "verifier"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "SET_PROCESS_LIMIT",
    "fullPermissionId": "android.permission.SET_PROCESS_LIMIT",
    "description": "Allows an application to set the maximum number of (not needed) application processes that can be running. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "8",
    "permissionId": "SET_TIME",
    "fullPermissionId": "android.permission.SET_TIME",
    "description": "Allows applications to set the system time. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "SET_TIME_ZONE",
    "fullPermissionId": "android.permission.SET_TIME_ZONE",
    "description": "Allows applications to set the system time zone. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "SET_WALLPAPER",
    "fullPermissionId": "android.permission.SET_WALLPAPER",
    "description": "Allows applications to set the wallpaper. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "SET_WALLPAPER_HINTS",
    "fullPermissionId": "android.permission.SET_WALLPAPER_HINTS",
    "description": "Allows applications to set the wallpaper hints. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "SIGNAL_PERSISTENT_PROCESSES",
    "fullPermissionId": "android.permission.SIGNAL_PERSISTENT_PROCESSES",
    "description": "Allow an application to request that a signal be sent to all persistent processes. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "29",
    "permissionId": "SMS_FINANCIAL_TRANSACTIONS",
    "fullPermissionId": "android.permission.SMS_FINANCIAL_TRANSACTIONS",
    "description": "Allows financial apps to read filtered sms messages.",
    "protectionLevel": [
      "signature",
      "appop"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "START_FOREGROUND_SERVICES_FROM_BACKGROUND",
    "description": "Allows an application to start foreground services from the background at any time. This permission is not for use by third-party applications, with the only exception being if the app is the default SMS app. Otherwise, it's only usable by privileged apps, app verifier app, and apps with any of the EMERGENCY or SYSTEM GALLERY roles."
  },
  {
    "apiLevel": "33",
    "permissionId": "START_VIEW_APP_FEATURES",
    "description": "Allows the holder to start the screen with a list of app features. Protection level: signature|installer"
  },
  {
    "apiLevel": "29",
    "permissionId": "START_VIEW_PERMISSION_USAGE",
    "fullPermissionId": "android.permission.START_VIEW_PERMISSION_USAGE",
    "description": "Allows the holder to start the permission usage screen for an app. <p>Protection level: signature|installer",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "STATUS_BAR",
    "fullPermissionId": "android.permission.STATUS_BAR",
    "description": "Allows an application to open, close, or disable the status bar and its icons. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE",
    "description": "Allows an application to subscribe to device locked and keyguard locked (i.e., showing) state. Protection level: signature|privileged|module|role Intended for use by ROLE_ASSISTANT, VDM, and signature / privileged apps only."
  },
  {
    "apiLevel": "1",
    "permissionId": "SYSTEM_ALERT_WINDOW",
    "fullPermissionId": "android.permission.SYSTEM_ALERT_WINDOW",
    "description": "Allows an app to create windows using the type {@link android.view.WindowManager.LayoutParams#TYPE_APPLICATION_OVERLAY}, shown on top of all other apps. Very few apps should use this permission; these windows are intended for system-level interaction with the user. <p class=\"note\"><strong>Note:</strong> If the app targets API level 23 or higher, the app user must explicitly grant this permission to the app through a permission management screen. The app requests the user's approval by sending an intent with action {@link android.provider.Settings#ACTION_MANAGE_OVERLAY_PERMISSION}. The app can check whether it has this authorization by calling {@link android.provider.Settings#canDrawOverlays Settings.canDrawOverlays()}. <p>Protection level: signature|preinstalled|appop|pre23|development",
    "protectionLevel": [
      "signature",
      "preinstalled",
      "appop",
      "pre23",
      "development"
    ]
  },
  {
    "apiLevel": "19",
    "permissionId": "TRANSMIT_IR",
    "fullPermissionId": "android.permission.TRANSMIT_IR",
    "description": "Allows using the device's IR transmitter, if available. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "34",
    "permissionId": "TURN_SCREEN_ON",
    "description": "Allows an app to turn on the screen on, e.g.&nbsp;with PowerManager.ACQUIRE_CAUSES_WAKEUP. Intended to only be used by home automation apps."
  },
  {
    "apiLevel": "36",
    "permissionId": "TV_IMPLICIT_ENTER_PIP",
    "description": "Allows an app to enter Picture-in-Picture mode when the user is not explicitly requesting it. This includes using ERROR(/PictureInPictureParams.Builder#setAutoEnterEnabled) as well as lifecycle methods such as ERROR(/Activity#onUserLeaveHint) and ERROR(/Activity#onPause) to enter PiP when the user leaves the app. This permission should only be used for certain PiP usage types."
  },
  {
    "apiLevel": "19",
    "permissionId": "UNINSTALL_SHORTCUT",
    "fullPermissionId": "com.android.launcher.permission.UNINSTALL_SHORTCUT",
    "description": "<p class=\"caution\"><strong>Don't use this permission in your app.</strong><br>This permission is no longer supported.",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "3",
    "permissionId": "UPDATE_DEVICE_STATS",
    "fullPermissionId": "android.permission.UPDATE_DEVICE_STATS",
    "description": "Allows an application to update device statistics. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "UPDATE_PACKAGES_WITHOUT_USER_ACTION",
    "description": "Allows an application to indicate via PackageInstaller.SessionParams.setRequireUserAction(int) that user action should not be required for an app update. Protection level: normal"
  },
  {
    "apiLevel": "28",
    "permissionId": "USE_BIOMETRIC",
    "fullPermissionId": "android.permission.USE_BIOMETRIC",
    "description": "Allows an app to use device supported biometric modalities. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "33",
    "permissionId": "USE_EXACT_ALARM",
    "description": "Allows apps to use exact alarms just like with SCHEDULE_EXACT_ALARM but without needing to request this permission from the user. This is only intended for use by apps that rely on exact alarms for their core functionality. You should continue using SCHEDULE_EXACT_ALARM if your app needs exact alarms for a secondary feature that users may or may not use within your app. Keep in mind that this is a powerful permission and app stores may enforce policies to audit and review the use of this permission. Such audits may involve removal from the app store if the app is found to be misusing this permission. Apps need to target API Build.VERSION_CODES.TIRAMISU or above to be able to request this permission. Note that only one of USE_EXACT_ALARM or SCHEDULE_EXACT_ALARM should be requested on a device. If your app is already using SCHEDULE_EXACT_ALARM on older SDKs but needs USE_EXACT_ALARM on SDK 33 and above, then SCHEDULE_EXACT_ALARM should be declared with a max-sdk attribute, like: &lt;uses-permission android:name=\"android.permission.SCHEDULE_EXACT_ALARM\" &Tab; android:maxSdkVersion=\"32\" /&gt; Apps that hold this permission, always stay in the WORKING_SET or lower standby bucket."
  },
  {
    "apiLevel": "23",
    "permissionId": "USE_FINGERPRINT",
    "fullPermissionId": "android.permission.USE_FINGERPRINT",
    "description": "Allows an app to use fingerprint hardware. <p>Protection level: normal @deprecated Applications should request {@link android.Manifest.permission#USE_BIOMETRIC} instead",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "29",
    "permissionId": "USE_FULL_SCREEN_INTENT",
    "fullPermissionId": "android.permission.USE_FULL_SCREEN_INTENT",
    "description": "Required for apps targeting {@link android.os.Build.VERSION_CODES#Q} that want to use {@link android.app.Notification.Builder#setFullScreenIntent notification full screen intents}.",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "USE_ICC_AUTH_WITH_DEVICE_IDENTIFIER",
    "description": "Allows to read device identifiers and use ICC based authentication like EAP-AKA. Often required in authentication to access the carrier's server and manage services of the subscriber. Protection level: signature|appop"
  },
  {
    "apiLevel": "9",
    "permissionId": "USE_SIP",
    "fullPermissionId": "android.permission.USE_SIP",
    "description": "Allows an application to use SIP service. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "31",
    "permissionId": "UWB_RANGING",
    "description": "Required to be able to range to devices using ultra-wideband. Protection level: dangerous"
  },
  {
    "apiLevel": "1",
    "permissionId": "VIBRATE",
    "fullPermissionId": "android.permission.VIBRATE",
    "description": "Allows access to the vibrator. <p>Protection level: normal",
    "protectionLevel": [
      "normal",
      "instant"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "WAKE_LOCK",
    "fullPermissionId": "android.permission.WAKE_LOCK",
    "description": "Allows using PowerManager WakeLocks to keep processor from sleeping or screen from dimming. <p>Protection level: normal",
    "protectionLevel": [
      "normal",
      "instant"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "WRITE_APN_SETTINGS",
    "fullPermissionId": "android.permission.WRITE_APN_SETTINGS",
    "description": "Allows applications to write the apn settings and read sensitive fields of an existing apn settings like user and password. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "WRITE_CALENDAR",
    "fullPermissionId": "android.permission.WRITE_CALENDAR",
    "description": "Allows an application to write the user's calendar data. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "16",
    "permissionId": "WRITE_CALL_LOG",
    "fullPermissionId": "android.permission.WRITE_CALL_LOG",
    "description": "Allows an application to write (but not read) the user's call log data. <p class=\"note\"><strong>Note:</strong> If your app uses the {@link #WRITE_CONTACTS} permission and <em>both</em> your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#min\">{@code minSdkVersion}</a> and <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> values are set to 15 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> is 16 or higher.</p> <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}.",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "WRITE_CONTACTS",
    "fullPermissionId": "android.permission.WRITE_CONTACTS",
    "description": "Allows an application to write the user's contacts data. <p>Protection level: dangerous",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "4",
    "permissionId": "WRITE_EXTERNAL_STORAGE",
    "fullPermissionId": "android.permission.WRITE_EXTERNAL_STORAGE",
    "description": "Allows an application to write to external storage. <p class=\"note\"><strong>Note:</strong> If <em>both</em> your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#min\">{@code minSdkVersion}</a> and <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> values are set to 3 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> is 4 or higher. <p>Starting in API level 19, this permission is <em>not</em> required to read/write files in your application-specific directories returned by {@link android.content.Context#getExternalFilesDir} and {@link android.content.Context#getExternalCacheDir}. <p>Is this permission is not whitelisted for an app that targets an API level before {@link android.os.Build.VERSION_CODES#Q} this permission cannot be granted to apps.</p>",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "WRITE_GSERVICES",
    "fullPermissionId": "android.permission.WRITE_GSERVICES",
    "description": "Allows an application to modify the Google service map. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "apiLevel": "3",
    "permissionId": "WRITE_SECURE_SETTINGS",
    "fullPermissionId": "android.permission.WRITE_SECURE_SETTINGS",
    "description": "Allows an application to read or write the secure system settings. <p>Not for use by third-party applications.",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "WRITE_SETTINGS",
    "fullPermissionId": "android.permission.WRITE_SETTINGS",
    "description": "Allows an application to read or write the system settings. <p class=\"note\"><strong>Note:</strong> If the app targets API level 23 or higher, the app user must explicitly grant this permission to the app through a permission management screen. The app requests the user's approval by sending an intent with action {@link android.provider.Settings#ACTION_MANAGE_WRITE_SETTINGS}. The app can check whether it has this authorization by calling {@link android.provider.Settings.System#canWrite Settings.System.canWrite()}. <p>Protection level: signature|preinstalled|appop|pre23",
    "protectionLevel": [
      "signature",
      "preinstalled",
      "appop",
      "pre23"
    ]
  },
  {
    "apiLevel": "1",
    "permissionId": "WRITE_SYNC_SETTINGS",
    "fullPermissionId": "android.permission.WRITE_SYNC_SETTINGS",
    "description": "Allows applications to write the sync settings. <p>Protection level: normal",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "apiLevel": "36",
    "permissionId": "WRITE_SYSTEM_PREFERENCES",
    "description": "Allows an application to access the Settings Preference services to write settings values exposed by the system Settings app and system apps that contribute settings surfaced in the Settings app. This allows the calling application to write settings values through the host application, agnostic of underlying storage. Protection Level: signature|privileged|appop"
  },
  {
    "apiLevel": "21",
    "permissionId": "WRITE_VOICEMAIL",
    "fullPermissionId": "com.android.voicemail.permission.WRITE_VOICEMAIL",
    "description": "Allows an application to modify and remove existing voicemails in the system. <p>Protection level: signature|privileged",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to read the user's contacts data. <p>Protection level: dangerous",
    "fullPermissionId": "android.intent.action.SCREEN_OFF",
    "permissionId": "SCREEN_OFF",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "description": "Allows an application to read the user's calendar data. <p>Protection level: dangerous",
    "fullPermissionId": "android.permission-group.CALENDAR",
    "permissionId": "CALENDAR",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "description": "Allows an application to send SMS messages. <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}.",
    "fullPermissionId": "android.permission-group.SMS",
    "permissionId": "SMS",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "description": "@SystemApi @TestApi Allows an application to read previously received cell broadcast messages and to register a content observer to get notifications when a cell broadcast has been received and added to the database. For emergency alerts, the database is updated immediately after the alert dialog and notification sound/vibration/speech are presented. The \"read\" column is then updated after the user dismisses the alert. This enables supplementary emergency assistance apps to start loading additional emergency information (if Internet access is available) when the alert is first received, and to delay presenting the info to the user until after the initial alert dialog is dismissed. <p>Protection level: dangerous <p> This is a hard restricted permission which cannot be held by an app until the installer on record did not whitelist the permission. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}. @hide Pending API council approval",
    "fullPermissionId": "android.permission.READ_CELL_BROADCASTS",
    "permissionId": "READ_CELL_BROADCASTS",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "description": "Allows an application to read from external storage. <p>Any app that declares the {@link #WRITE_EXTERNAL_STORAGE} permission is implicitly granted this permission.</p> <p>This permission is enforced starting in API level 19. Before API level 19, this permission is not enforced and all apps still have access to read from external storage. You can test your app with the permission enforced by enabling <em>Protect USB storage</em> under Developer options in the Settings app on a device running Android 4.1 or higher.</p> <p>Also starting in API level 19, this permission is <em>not</em> required to read/write files in your application-specific directories returned by {@link android.content.Context#getExternalFilesDir} and {@link android.content.Context#getExternalCacheDir}. <p class=\"note\"><strong>Note:</strong> If <em>both</em> your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#min\">{@code minSdkVersion}</a> and <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> values are set to 3 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> is 4 or higher. <p> This is a soft restricted permission which cannot be held by an app it its full form until the installer on record did not whitelist the permission. Specifically, if the permission is whitelisted the holder app can access external storage and the visual and aural media collections while if the permission is not whitelisted the holder app can only access to the visual and aural medial collections. Also the permission is immutably restricted meaning that the whitelist state can be specified only at install time and cannot change until the app is installed. For more details see {@link android.content.pm.PackageInstaller.SessionParams#setWhitelistedRestrictedPermissions(Set)}.",
    "fullPermissionId": "android.permission-group.STORAGE",
    "permissionId": "STORAGE",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "description": "@hide @SystemApi @TestApi Allows an application to modify OBB files visible to other apps.",
    "fullPermissionId": "android.permission.WRITE_OBB",
    "permissionId": "WRITE_OBB",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an app to access precise location. Alternatively, you might want {@link #ACCESS_COARSE_LOCATION}. <p>Protection level: dangerous",
    "fullPermissionId": "android.permission-group.LOCATION",
    "permissionId": "LOCATION",
    "protectionLevel": [
      "dangerous",
      "instant"
    ]
  },
  {
    "description": "Allows an application to access the IMS call service: making and modifying a call <p>Protection level: signature|privileged @hide",
    "fullPermissionId": "android.permission-group.CALL_LOG",
    "permissionId": "CALL_LOG",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows read only access to phone state, including the phone number of the device, current cellular network information, the status of any ongoing calls, and a list of any {@link android.telecom.PhoneAccount}s registered on the device. <p class=\"note\"><strong>Note:</strong> If <em>both</em> your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#min\">{@code minSdkVersion}</a> and <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> values are set to 3 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your <a href=\"{@docRoot}guide/topics/manifest/uses-sdk-element.html#target\">{@code targetSdkVersion}</a> is 4 or higher. <p>Protection level: dangerous",
    "fullPermissionId": "android.permission-group.PHONE",
    "permissionId": "PHONE",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "description": "Allows an application to record audio. <p>Protection level: dangerous",
    "fullPermissionId": "android.permission-group.MICROPHONE",
    "permissionId": "MICROPHONE",
    "protectionLevel": [
      "dangerous",
      "instant"
    ]
  },
  {
    "description": "@hide Allows an application to Access UCE-Presence. <p>Protection level: signature|privileged",
    "fullPermissionId": "android.permission.ACCESS_UCE_PRESENCE_SERVICE",
    "permissionId": "ACCESS_UCE_PRESENCE_SERVICE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Allows an application to Access UCE-OPTIONS. <p>Protection level: signature|privileged",
    "fullPermissionId": "android.permission.ACCESS_UCE_OPTIONS_SERVICE",
    "permissionId": "ACCESS_UCE_OPTIONS_SERVICE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to access data from sensors that the user uses to measure what is happening inside his/her body, such as heart rate. <p>Protection level: dangerous",
    "fullPermissionId": "android.permission-group.SENSORS",
    "permissionId": "SENSORS",
    "protectionLevel": [
      "dangerous"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.READ_PROFILE",
    "permissionId": "READ_PROFILE",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.WRITE_PROFILE",
    "permissionId": "WRITE_PROFILE",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.READ_SOCIAL_STREAM",
    "permissionId": "READ_SOCIAL_STREAM",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.WRITE_SOCIAL_STREAM",
    "permissionId": "WRITE_SOCIAL_STREAM",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.READ_USER_DICTIONARY",
    "permissionId": "READ_USER_DICTIONARY",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.WRITE_USER_DICTIONARY",
    "permissionId": "WRITE_USER_DICTIONARY",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.WRITE_SMS",
    "permissionId": "WRITE_SMS",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "com.android.browser.permission.READ_HISTORY_BOOKMARKS",
    "permissionId": "READ_HISTORY_BOOKMARKS",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS",
    "permissionId": "WRITE_HISTORY_BOOKMARKS",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.AUTHENTICATE_ACCOUNTS",
    "permissionId": "AUTHENTICATE_ACCOUNTS",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.MANAGE_ACCOUNTS",
    "permissionId": "MANAGE_ACCOUNTS",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.USE_CREDENTIALS",
    "permissionId": "USE_CREDENTIALS",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.SUBSCRIBED_FEEDS_READ",
    "permissionId": "SUBSCRIBED_FEEDS_READ",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.SUBSCRIBED_FEEDS_WRITE",
    "permissionId": "SUBSCRIBED_FEEDS_WRITE",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide We need to keep this around for backwards compatibility",
    "fullPermissionId": "android.permission.FLASHLIGHT",
    "permissionId": "FLASHLIGHT",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@SystemApi Allows an application to send SMS to premium shortcodes without user permission. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.SEND_SMS_NO_CONFIRMATION",
    "permissionId": "SEND_SMS_NO_CONFIRMATION",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to filter carrier specific sms. @hide",
    "fullPermissionId": "android.permission.CARRIER_FILTER_SMS",
    "permissionId": "CARRIER_FILTER_SMS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to receive emergency cell broadcast messages, to record or display them to the user. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.RECEIVE_EMERGENCY_BROADCAST",
    "permissionId": "RECEIVE_EMERGENCY_BROADCAST",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide",
    "fullPermissionId": "android.permission.RECEIVE_BLUETOOTH_MAP",
    "permissionId": "RECEIVE_BLUETOOTH_MAP",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to execute contacts directory search. This should only be used by ContactsProvider. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.BIND_DIRECTORY_SEARCH",
    "permissionId": "BIND_DIRECTORY_SEARCH",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to modify cell broadcasts through the content provider. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.MODIFY_CELL_BROADCASTS",
    "permissionId": "MODIFY_CELL_BROADCASTS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Allows HDMI-CEC service to access device and configuration files. This should only be used by HDMI-CEC service.",
    "fullPermissionId": "android.permission.HDMI_CEC",
    "permissionId": "HDMI_CEC",
    "protectionLevel": [
      "signature",
      "privileged",
      "vendorPrivileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to create mock location providers for testing. <p>Protection level: signature @hide",
    "fullPermissionId": "android.permission.ACCESS_MOCK_LOCATION",
    "permissionId": "ACCESS_MOCK_LOCATION",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @hide Allows apps to create and manage IPsec tunnels. <p>Only granted to applications that are currently bound by the system for creating and managing IPsec-based interfaces.",
    "fullPermissionId": "android.permission.MANAGE_IPSEC_TUNNELS",
    "permissionId": "MANAGE_IPSEC_TUNNELS",
    "protectionLevel": [
      "signature",
      "appop"
    ]
  },
  {
    "description": "@hide Allows apps to create and manage Test Networks. <p>Granted only to shell. CTS tests will use UiAutomation.AdoptShellPermissionIdentity() to gain access.",
    "fullPermissionId": "android.permission.MANAGE_TEST_NETWORKS",
    "permissionId": "MANAGE_TEST_NETWORKS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @hide Allows applications to read Wi-Fi credential. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.READ_WIFI_CREDENTIAL",
    "permissionId": "READ_WIFI_CREDENTIAL",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Allows applications to change tether state and run tether carrier provisioning. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.TETHER_PRIVILEGED",
    "permissionId": "TETHER_PRIVILEGED",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Allow system apps to receive broadcast when a wifi network credential is changed. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.RECEIVE_WIFI_CREDENTIAL_CHANGE",
    "permissionId": "RECEIVE_WIFI_CREDENTIAL_CHANGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide",
    "fullPermissionId": "android.permission.ACCESS_WIMAX_STATE",
    "permissionId": "ACCESS_WIMAX_STATE",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@hide",
    "fullPermissionId": "android.permission.CHANGE_WIMAX_STATE",
    "permissionId": "CHANGE_WIMAX_STATE",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "Allows applications to act as network scorers. @hide @SystemApi",
    "fullPermissionId": "android.permission.SCORE_NETWORKS",
    "permissionId": "SCORE_NETWORKS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows applications to request network recommendations and scores from the NetworkScoreService. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.REQUEST_NETWORK_SCORES",
    "permissionId": "REQUEST_NETWORK_SCORES",
    "protectionLevel": [
      "signature",
      "setup"
    ]
  },
  {
    "description": "Allows network stack services (Connectivity and Wifi) to coordinate <p>Not for use by third-party or privileged applications. @hide This should only be used by Connectivity and Wifi Services.",
    "fullPermissionId": "android.permission.NETWORK_STACK",
    "permissionId": "NETWORK_STACK",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows Settings and SystemUI to call methods in Networking services <p>Not for use by third-party or privileged applications. @hide This should only be used by Settings and SystemUI.",
    "fullPermissionId": "android.permission.NETWORK_SETTINGS",
    "permissionId": "NETWORK_SETTINGS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows SetupWizard to call methods in Networking services <p>Not for use by any other third-party or privileged applications. @SystemApi @hide This should only be used by SetupWizard.",
    "fullPermissionId": "android.permission.NETWORK_SETUP_WIZARD",
    "permissionId": "NETWORK_SETUP_WIZARD",
    "protectionLevel": [
      "signature",
      "setup"
    ]
  },
  {
    "description": "Allows Managed Provisioning to call methods in Networking services <p>Not for use by any other third-party or privileged applications. @SystemApi @hide This should only be used by ManagedProvisioning app.",
    "fullPermissionId": "android.permission.NETWORK_MANAGED_PROVISIONING",
    "permissionId": "NETWORK_MANAGED_PROVISIONING",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows Carrier Provisioning to call methods in Networking services <p>Not for use by any other third-party or privileged applications. @SystemApi @hide This should only be used by CarrierProvisioning.",
    "fullPermissionId": "android.permission.NETWORK_CARRIER_PROVISIONING",
    "permissionId": "NETWORK_CARRIER_PROVISIONING",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "#SystemApi @hide Allows applications to access information about LoWPAN interfaces. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.ACCESS_LOWPAN_STATE",
    "permissionId": "ACCESS_LOWPAN_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "#SystemApi @hide Allows applications to change LoWPAN connectivity state. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.CHANGE_LOWPAN_STATE",
    "permissionId": "CHANGE_LOWPAN_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "#SystemApi @hide Allows applications to read LoWPAN credential. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.READ_LOWPAN_CREDENTIAL",
    "permissionId": "READ_LOWPAN_CREDENTIAL",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "#SystemApi @hide Allows a service to register or unregister new LoWPAN interfaces. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.MANAGE_LOWPAN_INTERFACES",
    "permissionId": "MANAGE_LOWPAN_INTERFACES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Allows internal management of Wi-Fi connectivity state when on wireless consent mode. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.MANAGE_WIFI_WHEN_WIRELESS_CONSENT_REQUIRED",
    "permissionId": "MANAGE_WIFI_WHEN_WIRELESS_CONSENT_REQUIRED",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "#SystemApi @hide Allows an app to bypass Private DNS. <p>Not for use by third-party applications. TODO: publish as system API in next API release.",
    "fullPermissionId": "android.permission.NETWORK_BYPASS_PRIVATE_DNS",
    "permissionId": "NETWORK_BYPASS_PRIVATE_DNS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "#SystemApi @hide Allows device mobility state to be set so that Wifi scan interval can be increased when the device is stationary in order to save power. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.WIFI_SET_DEVICE_MOBILITY_STATE",
    "permissionId": "WIFI_SET_DEVICE_MOBILITY_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "#SystemApi @hide Allows privileged system APK to update Wifi usability stats and score. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.WIFI_UPDATE_USABILITY_STATS_SCORE",
    "permissionId": "WIFI_UPDATE_USABILITY_STATS_SCORE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @TestApi Allows an application to suspend other apps, which will prevent the user from using them until they are unsuspended. @hide",
    "fullPermissionId": "android.permission.SUSPEND_APPS",
    "permissionId": "SUSPEND_APPS",
    "protectionLevel": [
      "signature",
      "wellbeing"
    ]
  },
  {
    "description": "Control access to email providers exclusively for Bluetooth @hide",
    "fullPermissionId": "android.permission.BLUETOOTH_MAP",
    "permissionId": "BLUETOOTH_MAP",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows bluetooth stack to access files @hide This should only be used by Bluetooth apk.",
    "fullPermissionId": "android.permission.BLUETOOTH_STACK",
    "permissionId": "BLUETOOTH_STACK",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an internal user to use privileged ConnectivityManager APIs. @hide",
    "fullPermissionId": "android.permission.CONNECTIVITY_INTERNAL",
    "permissionId": "CONNECTIVITY_INTERNAL",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an internal user to use restricted Networks. @hide",
    "fullPermissionId": "android.permission.CONNECTIVITY_USE_RESTRICTED_NETWORKS",
    "permissionId": "CONNECTIVITY_USE_RESTRICTED_NETWORKS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an internal user to set signal strength in NetworkRequest. This kind of request will wake up device when signal strength meets the given value. @hide",
    "fullPermissionId": "android.permission.NETWORK_SIGNAL_STRENGTH_WAKEUP",
    "permissionId": "NETWORK_SIGNAL_STRENGTH_WAKEUP",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows a system application to access hardware packet offload capabilities. @hide",
    "fullPermissionId": "android.permission.PACKET_KEEPALIVE_OFFLOAD",
    "permissionId": "PACKET_KEEPALIVE_OFFLOAD",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide",
    "fullPermissionId": "android.permission.RECEIVE_DATA_ACTIVITY_CHANGE",
    "permissionId": "RECEIVE_DATA_ACTIVITY_CHANGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows access to the loop radio (Android@Home mesh network) device. @hide",
    "fullPermissionId": "android.permission.LOOP_RADIO",
    "permissionId": "LOOP_RADIO",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows sending and receiving handover transfer status from Wifi and Bluetooth @hide",
    "fullPermissionId": "android.permission.NFC_HANDOVER_STATUS",
    "permissionId": "NFC_HANDOVER_STATUS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Allows internal management of Bluetooth state when on wireless consent mode. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.MANAGE_BLUETOOTH_WHEN_WIRELESS_CONSENT_REQUIRED",
    "permissionId": "MANAGE_BLUETOOTH_WHEN_WIRELESS_CONSENT_REQUIRED",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows the device to be reset, clearing all data and enables Test Harness Mode.",
    "fullPermissionId": "android.permission.ENABLE_TEST_HARNESS_MODE",
    "permissionId": "ENABLE_TEST_HARNESS_MODE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to manage preferences and permissions for USB devices @hide",
    "fullPermissionId": "android.permission.MANAGE_USB",
    "permissionId": "MANAGE_USB",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to manage Android Debug Bridge settings. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.MANAGE_DEBUGGING",
    "permissionId": "MANAGE_DEBUGGING",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to access the MTP USB kernel driver. For use only by the device side MTP implementation. @hide",
    "fullPermissionId": "android.permission.ACCESS_MTP",
    "permissionId": "ACCESS_MTP",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows access to hardware peripherals. Intended only for hardware testing. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.HARDWARE_TEST",
    "permissionId": "HARDWARE_TEST",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to manage DynamicSystem image",
    "fullPermissionId": "android.permission.MANAGE_DYNAMIC_SYSTEM",
    "permissionId": "MANAGE_DYNAMIC_SYSTEM",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to install a DynamicSystem image and get status updates. @hide",
    "fullPermissionId": "android.permission.INSTALL_DYNAMIC_SYSTEM",
    "permissionId": "INSTALL_DYNAMIC_SYSTEM",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows access to Broadcast Radio @hide This is not a third-party API (intended for system apps).",
    "fullPermissionId": "android.permission.ACCESS_BROADCAST_RADIO",
    "permissionId": "ACCESS_BROADCAST_RADIO",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@deprecated @SystemApi Allows access to FM @hide This is not a third-party API (intended for system apps).",
    "fullPermissionId": "android.permission.ACCESS_FM_RADIO",
    "permissionId": "ACCESS_FM_RADIO",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows access to configure network interfaces, configure/use IPSec, etc. @hide",
    "fullPermissionId": "android.permission.NET_ADMIN",
    "permissionId": "NET_ADMIN",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows registration for remote audio playback. @hide",
    "fullPermissionId": "android.permission.REMOTE_AUDIO_PLAYBACK",
    "permissionId": "REMOTE_AUDIO_PLAYBACK",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows TvInputService to access underlying TV input hardware such as built-in tuners and HDMI-in's. @hide This should only be used by OEM's TvInputService's.",
    "fullPermissionId": "android.permission.TV_INPUT_HARDWARE",
    "permissionId": "TV_INPUT_HARDWARE",
    "protectionLevel": [
      "signature",
      "privileged",
      "vendorPrivileged"
    ]
  },
  {
    "description": "@SystemApi Allows to capture a frame of TV input hardware such as built-in tuners and HDMI-in's. @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.CAPTURE_TV_INPUT",
    "permissionId": "CAPTURE_TV_INPUT",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Allows TvInputService to access DVB device. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.DVB_DEVICE",
    "permissionId": "DVB_DEVICE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows reading and enabling/disabling the OEM unlock allowed by carrier state @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.MANAGE_CARRIER_OEM_UNLOCK_STATE",
    "permissionId": "MANAGE_CARRIER_OEM_UNLOCK_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows reading and enabling/disabling the OEM unlock allowed by user state @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.MANAGE_USER_OEM_UNLOCK_STATE",
    "permissionId": "MANAGE_USER_OEM_UNLOCK_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows reading the OEM unlock state @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.READ_OEM_UNLOCK_STATE",
    "permissionId": "READ_OEM_UNLOCK_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Allows enabling/disabling OEM unlock <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.OEM_UNLOCK_STATE",
    "permissionId": "OEM_UNLOCK_STATE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows querying state of PersistentDataBlock <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.ACCESS_PDB_STATE",
    "permissionId": "ACCESS_PDB_STATE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows testing if a passwords is forbidden by the admins. @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.TEST_BLACKLISTED_PASSWORD",
    "permissionId": "TEST_BLACKLISTED_PASSWORD",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows system update service to notify device owner about pending updates. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.NOTIFY_PENDING_SYSTEM_UPDATE",
    "permissionId": "NOTIFY_PENDING_SYSTEM_UPDATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows disabling the transmit-indicator LED that is normally on when a camera is in use by an application. @hide",
    "fullPermissionId": "android.permission.CAMERA_DISABLE_TRANSMIT_LED",
    "permissionId": "CAMERA_DISABLE_TRANSMIT_LED",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows sending the camera service notifications about system-wide events. @hide",
    "fullPermissionId": "android.permission.CAMERA_SEND_SYSTEM_EVENTS",
    "permissionId": "CAMERA_SEND_SYSTEM_EVENTS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows read access to privileged phone state. @hide Used internally.",
    "fullPermissionId": "android.permission.READ_PRIVILEGED_PHONE_STATE",
    "permissionId": "READ_PRIVILEGED_PHONE_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Protects the ability to register any PhoneAccount with PhoneAccount#CAPABILITY_SIM_SUBSCRIPTION. This capability indicates that the PhoneAccount corresponds to a device SIM. @hide",
    "fullPermissionId": "android.permission.REGISTER_SIM_SUBSCRIPTION",
    "permissionId": "REGISTER_SIM_SUBSCRIPTION",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Protects the ability to register any PhoneAccount with PhoneAccount#CAPABILITY_CALL_PROVIDER. @hide",
    "fullPermissionId": "android.permission.REGISTER_CALL_PROVIDER",
    "permissionId": "REGISTER_CALL_PROVIDER",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Protects the ability to register any PhoneAccount with PhoneAccount#CAPABILITY_CONNECTION_MANAGER @hide",
    "fullPermissionId": "android.permission.REGISTER_CONNECTION_MANAGER",
    "permissionId": "REGISTER_CONNECTION_MANAGER",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows the app to request network scans from telephony. <p>Not for use by third-party applications. @SystemApi @hide",
    "fullPermissionId": "android.permission.NETWORK_SCAN",
    "permissionId": "NETWORK_SCAN",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by a {@link android.telecom.PhoneAccountSuggestionService}, to ensure that only the system can bind to it. <p>Protection level: signature @SystemApi @hide",
    "fullPermissionId": "android.permission.BIND_PHONE_ACCOUNT_SUGGESTION_SERVICE",
    "permissionId": "BIND_PHONE_ACCOUNT_SUGGESTION_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by a {@link android.telecom.ConnectionService}, to ensure that only the system can bind to it. @deprecated {@link android.telecom.ConnectionService}s should require android.permission.BIND_TELECOM_CONNECTION_SERVICE instead. @SystemApi @hide",
    "fullPermissionId": "android.permission.BIND_CONNECTION_SERVICE",
    "permissionId": "BIND_CONNECTION_SERVICE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to control the in-call experience. @hide",
    "fullPermissionId": "android.permission.CONTROL_INCALL_EXPERIENCE",
    "permissionId": "CONTROL_INCALL_EXPERIENCE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to receive STK related commands. @hide",
    "fullPermissionId": "android.permission.RECEIVE_STK_COMMANDS",
    "permissionId": "RECEIVE_STK_COMMANDS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to send EMBMS download intents to apps @hide",
    "fullPermissionId": "android.permission.SEND_EMBMS_INTENTS",
    "permissionId": "SEND_EMBMS_INTENTS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows internal management of the sensor framework @hide",
    "fullPermissionId": "android.permission.MANAGE_SENSORS",
    "permissionId": "MANAGE_SENSORS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by an ImsService to ensure that only the system can bind to it. <p>Protection level: signature|privileged|vendorPrivileged @SystemApi @hide",
    "fullPermissionId": "android.permission.BIND_IMS_SERVICE",
    "permissionId": "BIND_IMS_SERVICE",
    "protectionLevel": [
      "signature",
      "privileged",
      "vendorPrivileged"
    ]
  },
  {
    "description": "Must be required by a telephony data service to ensure that only the system can bind to it. <p>Protection level: signature @SystemApi @hide",
    "fullPermissionId": "android.permission.BIND_TELEPHONY_DATA_SERVICE",
    "permissionId": "BIND_TELEPHONY_DATA_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by a NetworkService to ensure that only the system can bind to it. <p>Protection level: signature @SystemApi @hide",
    "fullPermissionId": "android.permission.BIND_TELEPHONY_NETWORK_SERVICE",
    "permissionId": "BIND_TELEPHONY_NETWORK_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to manage embedded subscriptions (those on a eUICC) through EuiccManager APIs. <p>Protection level: signature|privileged|development @hide",
    "fullPermissionId": "android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS",
    "permissionId": "WRITE_EMBEDDED_SUBSCRIPTIONS",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "description": "@SystemApi Must be required by an EuiccService to ensure that only the system can bind to it. <p>Protection level: signature @hide",
    "fullPermissionId": "android.permission.BIND_EUICC_SERVICE",
    "permissionId": "BIND_EUICC_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @TestApi Allows an application to write to internal media storage @hide",
    "fullPermissionId": "android.permission.WRITE_MEDIA_STORAGE",
    "permissionId": "WRITE_MEDIA_STORAGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Allows an application to cache content. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.CACHE_CONTENT",
    "permissionId": "CACHE_CONTENT",
    "protectionLevel": [
      "signature",
      "documenter"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to aggressively allocate disk space. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.ALLOCATE_AGGRESSIVE",
    "permissionId": "ALLOCATE_AGGRESSIVE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to use reserved disk space. <p>Not for use by third-party applications. Should only be requested by apps that provide core system functionality, to ensure system stability when disk is otherwise completely full.",
    "fullPermissionId": "android.permission.USE_RESERVED_DISK",
    "permissionId": "USE_RESERVED_DISK",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "New version of GET_TASKS that apps can request, since GET_TASKS doesn't really give access to task information. We need this new one because there are many existing apps that use add libraries and such that have validation code to ensure the app has requested the GET_TASKS permission by seeing if it has been granted the permission... if it hasn't, it kills the app with a message about being upset. So we need to have it continue to look like the app is getting that permission, even though it will never be checked, and new privileged apps can now request this one for real access. @hide @SystemApi",
    "fullPermissionId": "android.permission.REAL_GET_TASKS",
    "permissionId": "REAL_GET_TASKS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to start a task from a ActivityManager#RecentTaskInfo. @hide",
    "fullPermissionId": "android.permission.START_TASKS_FROM_RECENTS",
    "permissionId": "START_TASKS_FROM_RECENTS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to call APIs that allow it to do interactions across the users on the device, using singleton services and user-targeted broadcasts. This permission is not available to third party applications.",
    "fullPermissionId": "android.permission.INTERACT_ACROSS_USERS",
    "permissionId": "INTERACT_ACROSS_USERS",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "description": "@SystemApi Fuller form of {@link android.Manifest.permission#INTERACT_ACROSS_USERS} that removes restrictions on where broadcasts can be sent and allows other types of interactions @hide",
    "fullPermissionId": "android.permission.INTERACT_ACROSS_USERS_FULL",
    "permissionId": "INTERACT_ACROSS_USERS_FULL",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to call APIs that allow it to query and manage users on the device. This permission is not available to third party applications.",
    "fullPermissionId": "android.permission.MANAGE_USERS",
    "permissionId": "MANAGE_USERS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Allows an application to create, remove users and get the list of users on the device. Applications holding this permission can only create restricted, guest, managed, demo, and ephemeral users. For creating other kind of users, {@link android.Manifest.permission#MANAGE_USERS} is needed. This permission is not available to third party applications.",
    "fullPermissionId": "android.permission.CREATE_USERS",
    "permissionId": "CREATE_USERS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to set the profile owners and the device owner. This permission is not available to third party applications.",
    "fullPermissionId": "android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS",
    "permissionId": "MANAGE_PROFILE_AND_DEVICE_OWNERS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to get full detailed information about recently running tasks, with full fidelity to the real state. @hide",
    "fullPermissionId": "android.permission.GET_DETAILED_TASKS",
    "permissionId": "GET_DETAILED_TASKS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @TestApi @hide Allows an application to change to remove/kill tasks",
    "fullPermissionId": "android.permission.REMOVE_TASKS",
    "permissionId": "REMOVE_TASKS",
    "protectionLevel": [
      "signature",
      "documenter"
    ]
  },
  {
    "description": "@SystemApi @TestApi @hide Allows an application to create/manage/remove stacks",
    "fullPermissionId": "android.permission.MANAGE_ACTIVITY_STACKS",
    "permissionId": "MANAGE_ACTIVITY_STACKS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @TestApi @hide Allows an application to embed other activities",
    "fullPermissionId": "android.permission.ACTIVITY_EMBEDDING",
    "permissionId": "ACTIVITY_EMBEDDING",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to start any activity, regardless of permission protection or exported state. @hide",
    "fullPermissionId": "android.permission.START_ANY_ACTIVITY",
    "permissionId": "START_ANY_ACTIVITY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to start activities from background @hide",
    "fullPermissionId": "android.permission.START_ACTIVITIES_FROM_BACKGROUND",
    "permissionId": "START_ACTIVITIES_FROM_BACKGROUND",
    "protectionLevel": [
      "signature",
      "privileged",
      "vendorPrivileged",
      "oem",
      "verifier"
    ]
  },
  {
    "description": "@SystemApi Must be required by activities that handle the intent action {@link Intent#ACTION_SEND_SHOW_SUSPENDED_APP_DETAILS}. This is for use by apps that hold {@link Manifest.permission#SUSPEND_APPS} to interact with the system. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.SEND_SHOW_SUSPENDED_APP_DETAILS",
    "permissionId": "SEND_SHOW_SUSPENDED_APP_DETAILS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to start an activity as another app, provided that app has been granted a permissionToken from the ActivityManagerService. @hide",
    "fullPermissionId": "android.permission.START_ACTIVITY_AS_CALLER",
    "permissionId": "START_ACTIVITY_AS_CALLER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to query process states and current OOM adjustment scores. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.GET_PROCESS_STATE_AND_OOM_SCORE",
    "permissionId": "GET_PROCESS_STATE_AND_OOM_SCORE",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "description": "Allows use of PendingIntent.getIntent(). @hide",
    "fullPermissionId": "android.permission.GET_INTENT_SENDER_INTENT",
    "permissionId": "GET_INTENT_SENDER_INTENT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@deprecated Use {@link android.Manifest.permission#REQUEST_COMPANION_RUN_IN_BACKGROUND} @hide",
    "fullPermissionId": "android.permission.RUN_IN_BACKGROUND",
    "permissionId": "RUN_IN_BACKGROUND",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@deprecated Use {@link android.Manifest.permission#REQUEST_COMPANION_USE_DATA_IN_BACKGROUND} @hide",
    "fullPermissionId": "android.permission.USE_DATA_IN_BACKGROUND",
    "permissionId": "USE_DATA_IN_BACKGROUND",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to set display offsets for the screen. This permission is not available to third party applications.",
    "fullPermissionId": "android.permission.SET_DISPLAY_OFFSET",
    "permissionId": "SET_DISPLAY_OFFSET",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allow the app to read the system wallpaper image without holding the READ_EXTERNAL_STORAGE permission. <p>Not for use by third-party applications. @hide @SystemApi",
    "fullPermissionId": "android.permission.READ_WALLPAPER_INTERNAL",
    "permissionId": "READ_WALLPAPER_INTERNAL",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Change the screen compatibility mode of applications",
    "fullPermissionId": "android.permission.SET_SCREEN_COMPATIBILITY",
    "permissionId": "SET_SCREEN_COMPATIBILITY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @TestApi @hide Allows an application to modify config settings. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.WRITE_DEVICE_CONFIG",
    "permissionId": "WRITE_DEVICE_CONFIG",
    "protectionLevel": [
      "signature",
      "verifier",
      "configurator"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to read config settings. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.READ_DEVICE_CONFIG",
    "permissionId": "READ_DEVICE_CONFIG",
    "protectionLevel": [
      "signature",
      "preinstalled"
    ]
  },
  {
    "description": "@SystemApi @TestApi Allows an application to call {@link android.app.ActivityManager#forceStopPackage}. @hide",
    "fullPermissionId": "android.permission.FORCE_STOP_PACKAGES",
    "permissionId": "FORCE_STOP_PACKAGES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to retrieve the content of the active window An active window is the window that has fired an accessibility event.",
    "fullPermissionId": "android.permission.RETRIEVE_WINDOW_CONTENT",
    "permissionId": "RETRIEVE_WINDOW_CONTENT",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide",
    "fullPermissionId": "android.permission.STORAGE_INTERNAL",
    "permissionId": "STORAGE_INTERNAL",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows access to ASEC non-destructive API calls @hide",
    "fullPermissionId": "android.permission.ASEC_ACCESS",
    "permissionId": "ASEC_ACCESS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows creation of ASEC volumes @hide",
    "fullPermissionId": "android.permission.ASEC_CREATE",
    "permissionId": "ASEC_CREATE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows destruction of ASEC volumes @hide",
    "fullPermissionId": "android.permission.ASEC_DESTROY",
    "permissionId": "ASEC_DESTROY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows mount / unmount of ASEC volumes @hide",
    "fullPermissionId": "android.permission.ASEC_MOUNT_UNMOUNT",
    "permissionId": "ASEC_MOUNT_UNMOUNT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows rename of ASEC volumes @hide",
    "fullPermissionId": "android.permission.ASEC_RENAME",
    "permissionId": "ASEC_RENAME",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to use any media decoder when decoding for playback @hide",
    "fullPermissionId": "android.permission.ALLOW_ANY_CODEC_FOR_PLAYBACK",
    "permissionId": "ALLOW_ANY_CODEC_FOR_PLAYBACK",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to install and/or uninstall CA certificates on behalf of the user. @hide",
    "fullPermissionId": "android.permission.MANAGE_CA_CERTIFICATES",
    "permissionId": "MANAGE_CA_CERTIFICATES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to do certain operations needed for interacting with the recovery (system update) system. @hide",
    "fullPermissionId": "android.permission.RECOVERY",
    "permissionId": "RECOVERY",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to read system update info. @hide",
    "fullPermissionId": "android.permission.READ_SYSTEM_UPDATE_INFO",
    "permissionId": "READ_SYSTEM_UPDATE_INFO",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows the system to bind to an application's task services @hide",
    "fullPermissionId": "android.permission.BIND_JOB_SERVICE",
    "permissionId": "BIND_JOB_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to initiate configuration updates <p>An application requesting this permission is responsible for verifying the source and integrity of any update before passing it off to the various individual installer components @hide",
    "fullPermissionId": "android.permission.UPDATE_CONFIG",
    "permissionId": "UPDATE_CONFIG",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to query the current time zone rules state on device. @SystemApi @hide",
    "fullPermissionId": "android.permission.QUERY_TIME_ZONE_RULES",
    "permissionId": "QUERY_TIME_ZONE_RULES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows a time zone rule updater application to request the system installs / uninstalls timezone rules. <p>An application requesting this permission is responsible for verifying the source and integrity of the update before passing it off to the installer components. @SystemApi @hide",
    "fullPermissionId": "android.permission.UPDATE_TIME_ZONE_RULES",
    "permissionId": "UPDATE_TIME_ZONE_RULES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by a time zone rule updater application, to ensure that only the system can trigger it. @hide",
    "fullPermissionId": "android.permission.TRIGGER_TIME_ZONE_RULES_CHECK",
    "permissionId": "TRIGGER_TIME_ZONE_RULES_CHECK",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows the system to reset throttling in shortcut manager. @hide",
    "fullPermissionId": "android.permission.RESET_SHORTCUT_MANAGER_THROTTLING",
    "permissionId": "RESET_SHORTCUT_MANAGER_THROTTLING",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows the system to bind to the discovered Network Recommendation Service. @SystemApi @hide",
    "fullPermissionId": "android.permission.BIND_NETWORK_RECOMMENDATION_SERVICE",
    "permissionId": "BIND_NETWORK_RECOMMENDATION_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to enable, disable and change priority of runtime resource overlays. @hide",
    "fullPermissionId": "android.permission.CHANGE_OVERLAY_PACKAGES",
    "permissionId": "CHANGE_OVERLAY_PACKAGES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide @SystemApi @TestApi Allow an application to approve incident and bug reports to be shared off-device. There can be only one application installed on the device with this permission, and since this is a privileged permission, it must be in priv-app. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.APPROVE_INCIDENT_REPORTS",
    "permissionId": "APPROVE_INCIDENT_REPORTS",
    "protectionLevel": [
      "signature",
      "incidentReportApprover"
    ]
  },
  {
    "description": "@hide Allow an application to approve an incident or bug report approval from the system.",
    "fullPermissionId": "android.permission.REQUEST_INCIDENT_REPORT_APPROVAL",
    "permissionId": "REQUEST_INCIDENT_REPORT_APPROVAL",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows but does not guarantee access to user passwords at the conclusion of add account @hide",
    "fullPermissionId": "android.permission.GET_PASSWORD",
    "permissionId": "GET_PASSWORD",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to be the status bar. Currently used only by SystemUI.apk @hide",
    "fullPermissionId": "android.permission.STATUS_BAR_SERVICE",
    "permissionId": "STATUS_BAR_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to force a BACK operation on whatever is the top activity. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.FORCE_BACK",
    "permissionId": "FORCE_BACK",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to collect application operation statistics. Not for use by third party apps.",
    "fullPermissionId": "android.permission.GET_APP_OPS_STATS",
    "permissionId": "GET_APP_OPS_STATS",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "description": "@SystemApi Allows an application to update application operation statistics. Not for use by third party apps. @hide",
    "fullPermissionId": "android.permission.UPDATE_APP_OPS_STATS",
    "permissionId": "UPDATE_APP_OPS_STATS",
    "protectionLevel": [
      "signature",
      "privileged",
      "installer"
    ]
  },
  {
    "description": "@SystemApi Allows an application to update the user app op restrictions. Not for use by third party apps. @hide",
    "fullPermissionId": "android.permission.MANAGE_APP_OPS_RESTRICTIONS",
    "permissionId": "MANAGE_APP_OPS_RESTRICTIONS",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "Allows an application to update the user app op modes. Not for use by third party apps. @hide",
    "fullPermissionId": "android.permission.MANAGE_APP_OPS_MODES",
    "permissionId": "MANAGE_APP_OPS_MODES",
    "protectionLevel": [
      "signature",
      "installer",
      "verifier"
    ]
  },
  {
    "description": "@SystemApi Allows an application to open windows that are for use by parts of the system user interface. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.INTERNAL_SYSTEM_WINDOW",
    "permissionId": "INTERNAL_SYSTEM_WINDOW",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to use {@link android.view.WindowManager.LayoutsParams#SYSTEM_FLAG_HIDE_NON_SYSTEM_OVERLAY_WINDOWS} to hide non-system-overlay windows. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.HIDE_NON_SYSTEM_OVERLAY_WINDOWS",
    "permissionId": "HIDE_NON_SYSTEM_OVERLAY_WINDOWS",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "@SystemApi Allows an application to manage (create, destroy, Z-order) application tokens in the window manager. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.MANAGE_APP_TOKENS",
    "permissionId": "MANAGE_APP_TOKENS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows System UI to register listeners for events from Window Manager. @hide",
    "fullPermissionId": "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS",
    "permissionId": "REGISTER_WINDOW_MANAGER_LISTENERS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows the application to temporarily freeze the screen for a full-screen transition.",
    "fullPermissionId": "android.permission.FREEZE_SCREEN",
    "permissionId": "FREEZE_SCREEN",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to inject user events (keys, touch, trackball) into the event stream and deliver them to ANY window. Without this permission, you can only deliver events to windows in your own process. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.INJECT_EVENTS",
    "permissionId": "INJECT_EVENTS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to register an input filter which filters the stream of user events (keys, touch, trackball) before they are dispatched to any window.",
    "fullPermissionId": "android.permission.FILTER_EVENTS",
    "permissionId": "FILTER_EVENTS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to retrieve the window token from the accessibility manager.",
    "fullPermissionId": "android.permission.RETRIEVE_WINDOW_TOKEN",
    "permissionId": "RETRIEVE_WINDOW_TOKEN",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to modify accessibility information from another app.",
    "fullPermissionId": "android.permission.MODIFY_ACCESSIBILITY_DATA",
    "permissionId": "MODIFY_ACCESSIBILITY_DATA",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to change the accessibility volume.",
    "fullPermissionId": "android.permission.CHANGE_ACCESSIBILITY_VOLUME",
    "permissionId": "CHANGE_ACCESSIBILITY_VOLUME",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to collect frame statistics",
    "fullPermissionId": "android.permission.FRAME_STATS",
    "permissionId": "FRAME_STATS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to temporary enable accessibility on the device.",
    "fullPermissionId": "android.permission.TEMPORARY_ENABLE_ACCESSIBILITY",
    "permissionId": "TEMPORARY_ENABLE_ACCESSIBILITY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to launch detail settings activity of a particular accessibility service. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.OPEN_ACCESSIBILITY_DETAILS_SETTINGS",
    "permissionId": "OPEN_ACCESSIBILITY_DETAILS_SETTINGS",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "@SystemApi Allows an application to watch and control how activities are started globally in the system. Only for is in debugging (usually the monkey command). <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.SET_ACTIVITY_WATCHER",
    "permissionId": "SET_ACTIVITY_WATCHER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to call the activity manager shutdown() API to put the higher-level system there into a shutdown state. @hide",
    "fullPermissionId": "android.permission.SHUTDOWN",
    "permissionId": "SHUTDOWN",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to tell the activity manager to temporarily stop application switches, putting it into a special mode that prevents applications from immediately switching away from some critical UI such as the home screen. @hide",
    "fullPermissionId": "android.permission.STOP_APP_SWITCHES",
    "permissionId": "STOP_APP_SWITCHES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to retrieve private information about the current top activity, such as any assist context it can provide. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.GET_TOP_ACTIVITY_INFO",
    "permissionId": "GET_TOP_ACTIVITY_INFO",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by a {@link android.printservice.recommendation.RecommendationService}, to ensure that only the system can bind to it. @hide @SystemApi <p>Protection level: signature",
    "fullPermissionId": "android.permission.BIND_PRINT_RECOMMENDATION_SERVICE",
    "permissionId": "BIND_PRINT_RECOMMENDATION_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows applications to get the installed and enabled print services. @hide @SystemApi <p>Protection level: signature|preinstalled",
    "fullPermissionId": "android.permission.READ_PRINT_SERVICES",
    "permissionId": "READ_PRINT_SERVICES",
    "protectionLevel": [
      "signature",
      "preinstalled"
    ]
  },
  {
    "description": "Allows applications to get the currently recommended print services for printers. @hide @SystemApi <p>Protection level: signature|preinstalled",
    "fullPermissionId": "android.permission.READ_PRINT_SERVICE_RECOMMENDATIONS",
    "permissionId": "READ_PRINT_SERVICE_RECOMMENDATIONS",
    "protectionLevel": [
      "signature",
      "preinstalled"
    ]
  },
  {
    "description": "Must be required by the PrintSpooler to ensure that only the system can bind to it. @hide",
    "fullPermissionId": "android.permission.BIND_PRINT_SPOOLER_SERVICE",
    "permissionId": "BIND_PRINT_SPOOLER_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by the CompanionDeviceManager to ensure that only the system can bind to it. @hide",
    "fullPermissionId": "android.permission.BIND_COMPANION_DEVICE_MANAGER_SERVICE",
    "permissionId": "BIND_COMPANION_DEVICE_MANAGER_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Must be required by the RuntimePermissionPresenterService to ensure that only the system can bind to it. @hide",
    "fullPermissionId": "android.permission.BIND_RUNTIME_PERMISSION_PRESENTER_SERVICE",
    "permissionId": "BIND_RUNTIME_PERMISSION_PRESENTER_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Must be required by a AttentionService to ensure that only the system can bind to it. <p>Protection level: signature @hide",
    "fullPermissionId": "android.permission.BIND_ATTENTION_SERVICE",
    "permissionId": "BIND_ATTENTION_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Alternative version of android.permission.BIND_AUTOFILL_FIELD_CLASSIFICATION_SERVICE. This permission was renamed during the O previews but it was supported on the final O release, so we need to carry it over. <p>Protection level: signature @hide",
    "fullPermissionId": "android.permission.BIND_AUTOFILL",
    "permissionId": "BIND_AUTOFILL",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by an {@link android.service.autofill.AutofillFieldClassificationService} to ensure that only the system can bind to it. @hide This is not a third-party API (intended for OEMs and system apps).",
    "fullPermissionId": "android.permission.BIND_AUTOFILL_FIELD_CLASSIFICATION_SERVICE",
    "permissionId": "BIND_AUTOFILL_FIELD_CLASSIFICATION_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by a android.service.textclassifier.TextClassifierService, to ensure that only the system can bind to it. @SystemApi @hide This is not a third-party API (intended for OEMs and system apps). <p>Protection level: signature",
    "fullPermissionId": "android.permission.BIND_TEXTCLASSIFIER_SERVICE",
    "permissionId": "BIND_TEXTCLASSIFIER_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by a android.service.contentcapture.ContentCaptureService, to ensure that only the system can bind to it. @SystemApi @hide This is not a third-party API (intended for OEMs and system apps). <p>Protection level: signature",
    "fullPermissionId": "android.permission.BIND_CONTENT_CAPTURE_SERVICE",
    "permissionId": "BIND_CONTENT_CAPTURE_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by a android.service.contentsuggestions.ContentSuggestionsService, to ensure that only the system can bind to it. @SystemApi @hide This is not a third-party API (intended for OEMs and system apps). <p>Protection level: signature",
    "fullPermissionId": "android.permission.BIND_CONTENT_SUGGESTIONS_SERVICE",
    "permissionId": "BIND_CONTENT_SUGGESTIONS_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by a android.service.autofill.augmented.AugmentedAutofillService, to ensure that only the system can bind to it. @SystemApi @hide This is not a third-party API (intended for OEMs and system apps). <p>Protection level: signature",
    "fullPermissionId": "android.permission.BIND_AUGMENTED_AUTOFILL_SERVICE",
    "permissionId": "BIND_AUGMENTED_AUTOFILL_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by hotword enrollment application, to ensure that only the system can interact with it. @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.MANAGE_VOICE_KEYPHRASES",
    "permissionId": "MANAGE_VOICE_KEYPHRASES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by a {@link com.android.media.remotedisplay.RemoteDisplayProvider}, to ensure that only the system can bind to it. @hide",
    "fullPermissionId": "android.permission.BIND_REMOTE_DISPLAY",
    "permissionId": "BIND_REMOTE_DISPLAY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by an {@link android.service.sms.FinancialSmsService} to ensure that only the system can bind to it. @hide This is not a third-party API (intended for OEMs and system apps).",
    "fullPermissionId": "android.permission.BIND_FINANCIAL_SMS_SERVICE",
    "permissionId": "BIND_FINANCIAL_SMS_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Must be required by a {@link com.android.media.tv.remoteprovider.TvRemoteProvider} to ensure that only the system can bind to it. <p>Protection level: signature|privileged <p>Not for use by third-party applications. </p> @hide",
    "fullPermissionId": "android.permission.BIND_TV_REMOTE_SERVICE",
    "permissionId": "BIND_TV_REMOTE_SERVICE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Must be required for a virtual remote controller for TV. <p>Protection level: signature|privileged <p>Not for use by third-party applications. </p> @hide",
    "fullPermissionId": "android.permission.TV_VIRTUAL_REMOTE_CONTROLLER",
    "permissionId": "TV_VIRTUAL_REMOTE_CONTROLLER",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to change HDMI CEC active source. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.CHANGE_HDMI_CEC_ACTIVE_SOURCE",
    "permissionId": "CHANGE_HDMI_CEC_ACTIVE_SOURCE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to modify parental controls <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.MODIFY_PARENTAL_CONTROLS",
    "permissionId": "MODIFY_PARENTAL_CONTROLS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to read TvContentRatingSystemInfo <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.READ_CONTENT_RATING_SYSTEMS",
    "permissionId": "READ_CONTENT_RATING_SYSTEMS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to notify TV inputs by sending broadcasts. <p>Protection level: signature|privileged <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.NOTIFY_TV_INPUTS",
    "permissionId": "NOTIFY_TV_INPUTS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by a {@link android.media.routing.MediaRouteService} to ensure that only the system can interact with it. @hide",
    "fullPermissionId": "android.permission.BIND_ROUTE_PROVIDER",
    "permissionId": "BIND_ROUTE_PROVIDER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Required to add or remove another application as a device admin. <p>Not for use by third-party applications. @hide @removed",
    "fullPermissionId": "android.permission.MANAGE_DEVICE_ADMINS",
    "permissionId": "MANAGE_DEVICE_ADMINS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an app to reset the device password. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.RESET_PASSWORD",
    "permissionId": "RESET_PASSWORD",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an app to lock the device. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.LOCK_DEVICE",
    "permissionId": "LOCK_DEVICE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows low-level access to setting the orientation (actually rotation) of the screen. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.SET_ORIENTATION",
    "permissionId": "SET_ORIENTATION",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows low-level access to setting the pointer speed. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.SET_POINTER_SPEED",
    "permissionId": "SET_POINTER_SPEED",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows low-level access to setting input device calibration. <p>Not for use by normal applications. @hide",
    "fullPermissionId": "android.permission.SET_INPUT_CALIBRATION",
    "permissionId": "SET_INPUT_CALIBRATION",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows low-level access to setting the keyboard layout. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.SET_KEYBOARD_LAYOUT",
    "permissionId": "SET_KEYBOARD_LAYOUT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to query tablet mode state and monitor changes in it. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.TABLET_MODE",
    "permissionId": "TABLET_MODE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to install self updates. This is a limited version of {@link android.Manifest.permission#INSTALL_PACKAGES}. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.INSTALL_SELF_UPDATES",
    "permissionId": "INSTALL_SELF_UPDATES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to install updates. This is a limited version of {@link android.Manifest.permission#INSTALL_PACKAGES}. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.INSTALL_PACKAGE_UPDATES",
    "permissionId": "INSTALL_PACKAGE_UPDATES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to install existing system packages. This is a limited version of {@link android.Manifest.permission#INSTALL_PACKAGES}. <p>Not for use by third-party applications. TODO(b/80204953): remove this permission once we have a long-term solution. @hide",
    "fullPermissionId": "com.android.permission.INSTALL_EXISTING_PACKAGES",
    "permissionId": "INSTALL_EXISTING_PACKAGES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @TestApi Allows an application to clear user data. <p>Not for use by third-party applications @hide",
    "fullPermissionId": "android.permission.CLEAR_APP_USER_DATA",
    "permissionId": "CLEAR_APP_USER_DATA",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "@hide Allows an application to get the URI permissions granted to another application. <p>Not for use by third-party applications",
    "fullPermissionId": "android.permission.GET_APP_GRANTED_URI_PERMISSIONS",
    "permissionId": "GET_APP_GRANTED_URI_PERMISSIONS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to clear the URI permissions granted to another application. <p>Not for use by third-party applications",
    "fullPermissionId": "android.permission.CLEAR_APP_GRANTED_URI_PERMISSIONS",
    "permissionId": "CLEAR_APP_GRANTED_URI_PERMISSIONS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to change the status of Scoped Access Directory requests granted or rejected by the user. <p>This permission should <em>only</em> be requested by the platform settings app. This permission cannot be granted to third-party apps. <p>Protection level: signature",
    "fullPermissionId": "android.permission.MANAGE_SCOPED_ACCESS_DIRECTORY_PERMISSIONS",
    "permissionId": "MANAGE_SCOPED_ACCESS_DIRECTORY_PERMISSIONS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Allows an application to change the status of a persistable URI permission granted to another application. <p>This permission should <em>only</em> be requested by the platform settings app. This permission cannot be granted to third-party apps. <p>Protection level: signature",
    "fullPermissionId": "android.permission.FORCE_PERSISTABLE_URI_PERMISSIONS",
    "permissionId": "FORCE_PERSISTABLE_URI_PERMISSIONS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to delete cache files. @hide",
    "fullPermissionId": "android.permission.INTERNAL_DELETE_CACHE_FILES",
    "permissionId": "INTERNAL_DELETE_CACHE_FILES",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to move location of installed package. @hide",
    "fullPermissionId": "android.permission.MOVE_PACKAGE",
    "permissionId": "MOVE_PACKAGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to grant specific permissions. @hide",
    "fullPermissionId": "android.permission.GRANT_RUNTIME_PERMISSIONS",
    "permissionId": "GRANT_RUNTIME_PERMISSIONS",
    "protectionLevel": [
      "signature",
      "installer",
      "verifier"
    ]
  },
  {
    "description": "@SystemApi Allows an app that has this permission and the permissions to install packages to request certain runtime permissions to be granted at installation. @hide",
    "fullPermissionId": "android.permission.INSTALL_GRANT_RUNTIME_PERMISSIONS",
    "permissionId": "INSTALL_GRANT_RUNTIME_PERMISSIONS",
    "protectionLevel": [
      "signature",
      "installer",
      "verifier"
    ]
  },
  {
    "description": "@SystemApi Allows an application to revoke specific permissions. @hide",
    "fullPermissionId": "android.permission.REVOKE_RUNTIME_PERMISSIONS",
    "permissionId": "REVOKE_RUNTIME_PERMISSIONS",
    "protectionLevel": [
      "signature",
      "installer",
      "verifier"
    ]
  },
  {
    "description": "@SystemApi Allows the system to read runtime permission state. @hide",
    "fullPermissionId": "android.permission.GET_RUNTIME_PERMISSIONS",
    "permissionId": "GET_RUNTIME_PERMISSIONS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to change policy_fixed permissions. @hide",
    "fullPermissionId": "android.permission.ADJUST_RUNTIME_PERMISSIONS_POLICY",
    "permissionId": "ADJUST_RUNTIME_PERMISSIONS_POLICY",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "@SystemApi Allows an application to whitelist restricted permissions on any of the whitelists. @hide",
    "fullPermissionId": "android.permission.WHITELIST_RESTRICTED_PERMISSIONS",
    "permissionId": "WHITELIST_RESTRICTED_PERMISSIONS",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "@hide Allows an application to observe permission changes.",
    "fullPermissionId": "android.permission.OBSERVE_GRANT_REVOKE_PERMISSIONS",
    "permissionId": "OBSERVE_GRANT_REVOKE_PERMISSIONS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to manage the holders of a role. @hide",
    "fullPermissionId": "android.permission.MANAGE_ROLE_HOLDERS",
    "permissionId": "MANAGE_ROLE_HOLDERS",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "@SystemApi Allows an application to observe role holder changes. @hide",
    "fullPermissionId": "android.permission.OBSERVE_ROLE_HOLDERS",
    "permissionId": "OBSERVE_ROLE_HOLDERS",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "@SystemApi Allows an application to use SurfaceFlinger's low level features. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.ACCESS_SURFACE_FLINGER",
    "permissionId": "ACCESS_SURFACE_FLINGER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to take screen shots and more generally get access to the frame buffer data. <p>Not for use by third-party applications. @hide @removed",
    "fullPermissionId": "android.permission.READ_FRAME_BUFFER",
    "permissionId": "READ_FRAME_BUFFER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to use InputFlinger's low level features. @hide",
    "fullPermissionId": "android.permission.ACCESS_INPUT_FLINGER",
    "permissionId": "ACCESS_INPUT_FLINGER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to disable/enable input devices. Could be used to prevent unwanted touch events on a touchscreen, for example during swimming or rain. @hide",
    "fullPermissionId": "android.permission.DISABLE_INPUT_DEVICE",
    "permissionId": "DISABLE_INPUT_DEVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to control low-level features of Wifi displays such as opening an RTSP socket. This permission should only be used by the display manager. @hide",
    "fullPermissionId": "android.permission.CONTROL_WIFI_DISPLAY",
    "permissionId": "CONTROL_WIFI_DISPLAY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to control the color modes set for displays system-wide. <p>Not for use by third-party applications.</p> @hide",
    "fullPermissionId": "android.permission.CONFIGURE_DISPLAY_COLOR_MODE",
    "permissionId": "CONFIGURE_DISPLAY_COLOR_MODE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to control the color saturation of the display. @hide @SystemApi",
    "fullPermissionId": "android.permission.CONTROL_DISPLAY_SATURATION",
    "permissionId": "CONTROL_DISPLAY_SATURATION",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to control display color transformations. <p>Not for use by third-party applications.</p> @hide @SystemApi",
    "fullPermissionId": "android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS",
    "permissionId": "CONTROL_DISPLAY_COLOR_TRANSFORMS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to collect usage infomation about brightness slider changes. <p>Not for use by third-party applications.</p> @hide @SystemApi @TestApi",
    "fullPermissionId": "android.permission.BRIGHTNESS_SLIDER_USAGE",
    "permissionId": "BRIGHTNESS_SLIDER_USAGE",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "description": "Allows an application to collect ambient light stats. <p>Not for use by third party applications.</p> @hide @SystemApi",
    "fullPermissionId": "android.permission.ACCESS_AMBIENT_LIGHT_STATS",
    "permissionId": "ACCESS_AMBIENT_LIGHT_STATS",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "description": "Allows an application to modify the display brightness configuration @hide @SystemApi @TestApi",
    "fullPermissionId": "android.permission.CONFIGURE_DISPLAY_BRIGHTNESS",
    "permissionId": "CONFIGURE_DISPLAY_BRIGHTNESS",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "description": "Allows an application to control the system's display brightness @hide",
    "fullPermissionId": "android.permission.CONTROL_DISPLAY_BRIGHTNESS",
    "permissionId": "CONTROL_DISPLAY_BRIGHTNESS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to control VPN. <p>Not for use by third-party applications.</p> @hide",
    "fullPermissionId": "android.permission.CONTROL_VPN",
    "permissionId": "CONTROL_VPN",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to access and modify always-on VPN configuration. <p>Not for use by third-party or privileged applications. @hide",
    "fullPermissionId": "android.permission.CONTROL_ALWAYS_ON_VPN",
    "permissionId": "CONTROL_ALWAYS_ON_VPN",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to capture the audio played by other apps that have set an allow capture policy of {@link android.media.AudioAttributes#ALLOW_CAPTURE_BY_SYSTEM}. Without this permission, only audio with an allow capture policy of {@link android.media.AudioAttributes#ALLOW_CAPTURE_BY_ALL} can be used. There are strong restriction listed at {@link android.media.AudioAttributes#ALLOW_CAPTURE_BY_SYSTEM} on what an app can do with the captured audio. See {@code CAPTURE_AUDIO_OUTPUT} for capturing audio use cases other than media playback. <p>Not for use by third-party applications.</p> @hide",
    "fullPermissionId": "android.permission.CAPTURE_MEDIA_OUTPUT",
    "permissionId": "CAPTURE_MEDIA_OUTPUT",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to capture audio for hotword detection. <p>Not for use by third-party applications.</p> @hide",
    "fullPermissionId": "android.permission.CAPTURE_AUDIO_HOTWORD",
    "permissionId": "CAPTURE_AUDIO_HOTWORD",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to modify audio routing and override policy decisions. <p>Not for use by third-party applications.</p> @hide",
    "fullPermissionId": "android.permission.MODIFY_AUDIO_ROUTING",
    "permissionId": "MODIFY_AUDIO_ROUTING",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to modify what effects are applied to all audio (matching certain criteria) from any application. <p>Not for use by third-party applications.</p> @hide",
    "fullPermissionId": "android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS",
    "permissionId": "MODIFY_DEFAULT_AUDIO_EFFECTS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to provide remote displays. <p>Not for use by third-party applications.</p> @hide",
    "fullPermissionId": "android.permission.REMOTE_DISPLAY_PROVIDER",
    "permissionId": "REMOTE_DISPLAY_PROVIDER",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to capture video output. <p>Not for use by third-party applications.</p> @hide @removed",
    "fullPermissionId": "android.permission.CAPTURE_VIDEO_OUTPUT",
    "permissionId": "CAPTURE_VIDEO_OUTPUT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to capture secure video output. <p>Not for use by third-party applications.</p> @hide @removed",
    "fullPermissionId": "android.permission.CAPTURE_SECURE_VIDEO_OUTPUT",
    "permissionId": "CAPTURE_SECURE_VIDEO_OUTPUT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to set the volume key long-press listener. <p>When it's set, the application will receive the volume key long-press event instead of changing volume.</p> <p>Not for use by third-party applications</p>",
    "fullPermissionId": "android.permission.SET_VOLUME_KEY_LONG_PRESS_LISTENER",
    "permissionId": "SET_VOLUME_KEY_LONG_PRESS_LISTENER",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to set media key event listener. <p>When it's set, the application will receive the media key event before any other media sessions. If the event is handled by the listener, other sessions cannot get the event.</p> <p>Not for use by third-party applications</p>",
    "fullPermissionId": "android.permission.SET_MEDIA_KEY_LISTENER",
    "permissionId": "SET_MEDIA_KEY_LISTENER",
    "protectionLevel": [
      "signature",
      "privileged",
      "development"
    ]
  },
  {
    "description": "@SystemApi Required to be able to disable the device (very dangerous!). <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.BRICK",
    "permissionId": "BRICK",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows low-level access to power management. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.DEVICE_POWER",
    "permissionId": "DEVICE_POWER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows toggling battery saver on the system. Superseded by DEVICE_POWER permission. @hide @SystemApi",
    "fullPermissionId": "android.permission.POWER_SAVER",
    "permissionId": "POWER_SAVER",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows access to the PowerManager.userActivity function. <p>Not for use by third-party applications. @hide @SystemApi",
    "fullPermissionId": "android.permission.USER_ACTIVITY",
    "permissionId": "USER_ACTIVITY",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Allows low-level access to tun tap driver",
    "fullPermissionId": "android.permission.NET_TUNNELING",
    "permissionId": "NET_TUNNELING",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to broadcast privileged networking requests. <p>Not for use by third-party applications. @hide @deprecated Use {@link android.Manifest.permission#REQUEST_NETWORK_SCORES} instead",
    "fullPermissionId": "android.permission.BROADCAST_NETWORK_PRIVILEGED",
    "permissionId": "BROADCAST_NETWORK_PRIVILEGED",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to perform CDMA OTA provisioning @hide",
    "fullPermissionId": "android.permission.PERFORM_CDMA_PROVISIONING",
    "permissionId": "PERFORM_CDMA_PROVISIONING",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to perform SIM Activation @hide",
    "fullPermissionId": "android.permission.PERFORM_SIM_ACTIVATION",
    "permissionId": "PERFORM_SIM_ACTIVATION",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide @SystemApi Allows an application to observe usage time of apps. The app can register for callbacks when apps reach a certain usage time limit, etc.",
    "fullPermissionId": "android.permission.OBSERVE_APP_USAGE",
    "permissionId": "OBSERVE_APP_USAGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide @TestApi @SystemApi Allows an application to change the app idle state of an app. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.CHANGE_APP_IDLE_STATE",
    "permissionId": "CHANGE_APP_IDLE_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide @SystemApi Allows an application to temporarily whitelist an inactive app to access the network and acquire wakelocks. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST",
    "permissionId": "CHANGE_DEVICE_IDLE_TEMP_WHITELIST",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to manage statscompanion. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.STATSCOMPANION",
    "permissionId": "STATSCOMPANION",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to control the backup and restore process. <p>Not for use by third-party applications. @hide pending API council",
    "fullPermissionId": "android.permission.BACKUP",
    "permissionId": "BACKUP",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows application to manage {@link android.security.keystore.recovery.RecoveryController}. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.RECOVER_KEYSTORE",
    "permissionId": "RECOVER_KEYSTORE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows the holder to access and manage instant applications on the device. @hide",
    "fullPermissionId": "android.permission.CONFIRM_FULL_BACKUP",
    "permissionId": "CONFIRM_FULL_BACKUP",
    "protectionLevel": [
      "signature",
      "installer",
      "verifier",
      "wellbeing"
    ]
  },
  {
    "description": "@hide Allows sysui to manage user grants of slice permissions.",
    "fullPermissionId": "android.permission.MANAGE_SLICE_PERMISSIONS",
    "permissionId": "MANAGE_SLICE_PERMISSIONS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Private permission, to restrict who can bring up a dialog to add a new keyguard widget @hide",
    "fullPermissionId": "android.permission.BIND_KEYGUARD_APPWIDGET",
    "permissionId": "BIND_KEYGUARD_APPWIDGET",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Internal permission allowing an application to query/set which applications can bind AppWidgets. @hide",
    "fullPermissionId": "android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS",
    "permissionId": "MODIFY_APPWIDGET_BIND_PERMISSIONS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows applications to change the background data setting. <p>Not for use by third-party applications. @hide pending API council",
    "fullPermissionId": "android.permission.CHANGE_BACKGROUND_DATA_SETTING",
    "permissionId": "CHANGE_BACKGROUND_DATA_SETTING",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Internal permission protecting access to the global search system: ensures that only the system can access the provider to perform queries (since this otherwise provides unrestricted access to a variety of content providers), and to write the search statistics (to keep applications from gaming the source ranking). @hide",
    "fullPermissionId": "android.permission.GLOBAL_SEARCH_CONTROL",
    "permissionId": "GLOBAL_SEARCH_CONTROL",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Internal permission to allows an application to read indexable data. @hide",
    "fullPermissionId": "android.permission.READ_SEARCH_INDEXABLES",
    "permissionId": "READ_SEARCH_INDEXABLES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Internal permission to allows an application to bind to suggestion service. @hide",
    "fullPermissionId": "android.permission.BIND_SETTINGS_SUGGESTIONS_SERVICE",
    "permissionId": "BIND_SETTINGS_SUGGESTIONS_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Internal permission to allows an application to access card content provider.",
    "fullPermissionId": "android.permission.WRITE_SETTINGS_HOMEPAGE_DATA",
    "permissionId": "WRITE_SETTINGS_HOMEPAGE_DATA",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows applications to set a live wallpaper. @hide XXX Change to signature once the picker is moved to its own apk as Ghod Intended.",
    "fullPermissionId": "android.permission.SET_WALLPAPER_COMPONENT",
    "permissionId": "SET_WALLPAPER_COMPONENT",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows applications to read dream settings and dream state. @hide",
    "fullPermissionId": "android.permission.READ_DREAM_STATE",
    "permissionId": "READ_DREAM_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows applications to write dream settings, and start or stop dreaming. @hide",
    "fullPermissionId": "android.permission.WRITE_DREAM_STATE",
    "permissionId": "WRITE_DREAM_STATE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allow an application to read and write the cache partition. @hide",
    "fullPermissionId": "android.permission.ACCESS_CACHE_FILESYSTEM",
    "permissionId": "ACCESS_CACHE_FILESYSTEM",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by default container service so that only the system can bind to it and use it to copy protected data to secure containers or files accessible to the system. @hide",
    "fullPermissionId": "android.permission.COPY_PROTECTED_DATA",
    "permissionId": "COPY_PROTECTED_DATA",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Internal permission protecting access to the encryption methods @hide",
    "fullPermissionId": "android.permission.CRYPT_KEEPER",
    "permissionId": "CRYPT_KEEPER",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to read historical network usage for specific networks and applications. @hide",
    "fullPermissionId": "android.permission.READ_NETWORK_USAGE_HISTORY",
    "permissionId": "READ_NETWORK_USAGE_HISTORY",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to manage network policies (such as warning and disable limits) and to define application-specific rules. @hide",
    "fullPermissionId": "android.permission.MANAGE_NETWORK_POLICY",
    "permissionId": "MANAGE_NETWORK_POLICY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @hide @deprecated use UPDATE_DEVICE_STATS instead",
    "fullPermissionId": "android.permission.MODIFY_NETWORK_ACCOUNTING",
    "permissionId": "MODIFY_NETWORK_ACCOUNTING",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to manage carrier subscription plans.",
    "fullPermissionId": "android.permission.MANAGE_SUBSCRIPTION_PLANS",
    "permissionId": "MANAGE_SUBSCRIPTION_PLANS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "C2DM permission. @hide Used internally.",
    "fullPermissionId": "android.intent.category.MASTER_CLEAR.permission.C2D_MESSAGE",
    "permissionId": "C2D_MESSAGE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @hide Package verifier needs to have this permission before the PackageManager will trust it to verify packages.",
    "fullPermissionId": "android.permission.PACKAGE_VERIFICATION_AGENT",
    "permissionId": "PACKAGE_VERIFICATION_AGENT",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by package verifier receiver, to ensure that only the system can interact with it. @hide",
    "fullPermissionId": "android.permission.BIND_PACKAGE_VERIFIER",
    "permissionId": "BIND_PACKAGE_VERIFIER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Rollback manager needs to have this permission before the PackageManager will trust it to enable rollback.",
    "fullPermissionId": "android.permission.PACKAGE_ROLLBACK_AGENT",
    "permissionId": "PACKAGE_ROLLBACK_AGENT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @TestApi @hide Allows managing apk level rollbacks.",
    "fullPermissionId": "android.permission.MANAGE_ROLLBACKS",
    "permissionId": "MANAGE_ROLLBACKS",
    "protectionLevel": [
      "signature",
      "verifier"
    ]
  },
  {
    "description": "@TestApi @hide Allows testing apk level rollbacks.",
    "fullPermissionId": "android.permission.TEST_MANAGE_ROLLBACKS",
    "permissionId": "TEST_MANAGE_ROLLBACKS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi @hide Allows an application to mark other applications as harmful",
    "fullPermissionId": "android.permission.SET_HARMFUL_APP_WARNINGS",
    "permissionId": "SET_HARMFUL_APP_WARNINGS",
    "protectionLevel": [
      "signature",
      "verifier"
    ]
  },
  {
    "description": "@SystemApi @hide Intent filter verifier needs to have this permission before the PackageManager will trust it to verify intent filters.",
    "fullPermissionId": "android.permission.INTENT_FILTER_VERIFICATION_AGENT",
    "permissionId": "INTENT_FILTER_VERIFICATION_AGENT",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by intent filter verifier receiver, to ensure that only the system can interact with it. @hide",
    "fullPermissionId": "android.permission.BIND_INTENT_FILTER_VERIFIER",
    "permissionId": "BIND_INTENT_FILTER_VERIFIER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows applications to access serial ports via the SerialManager. @hide",
    "fullPermissionId": "android.permission.SERIAL_PORT",
    "permissionId": "SERIAL_PORT",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows the holder to access content providers from outside an ApplicationThread. This permission is enforced by the ActivityManagerService on the corresponding APIs, in particular ActivityManagerService#getContentProviderExternal(String) and ActivityManagerService#removeContentProviderExternal(String). @hide",
    "fullPermissionId": "android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY",
    "permissionId": "ACCESS_CONTENT_PROVIDERS_EXTERNALLY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to hold an UpdateLock, recommending that a headless OTA reboot *not* occur while the lock is held. @hide",
    "fullPermissionId": "android.permission.UPDATE_LOCK",
    "permissionId": "UPDATE_LOCK",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application the opportunity to become a {@link android.service.notification.NotificationAssistantService}. User permission is still required before access is granted. @hide",
    "fullPermissionId": "android.permission.REQUEST_NOTIFICATION_ASSISTANT_SERVICE",
    "permissionId": "REQUEST_NOTIFICATION_ASSISTANT_SERVICE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi @TestApi Allows an application to read the current set of notifications, including any metadata and intents attached. @hide",
    "fullPermissionId": "android.permission.ACCESS_NOTIFICATIONS",
    "permissionId": "ACCESS_NOTIFICATIONS",
    "protectionLevel": [
      "signature",
      "privileged",
      "appop"
    ]
  },
  {
    "description": "Allows modification of do not disturb rules and policies. Only allowed for system processes. @hide",
    "fullPermissionId": "android.permission.MANAGE_NOTIFICATIONS",
    "permissionId": "MANAGE_NOTIFICATIONS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows notifications to be colorized <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.USE_COLORIZED_NOTIFICATIONS",
    "permissionId": "USE_COLORIZED_NOTIFICATIONS",
    "protectionLevel": [
      "signature",
      "setup"
    ]
  },
  {
    "description": "Allows access to keyguard secure storage. Only allowed for system processes. @hide",
    "fullPermissionId": "android.permission.ACCESS_KEYGUARD_SECURE_STORAGE",
    "permissionId": "ACCESS_KEYGUARD_SECURE_STORAGE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows managing (adding, removing) fingerprint templates. Reserved for the system. @hide",
    "fullPermissionId": "android.permission.MANAGE_FINGERPRINT",
    "permissionId": "MANAGE_FINGERPRINT",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an app to reset fingerprint attempt counter. Reserved for the system. @hide",
    "fullPermissionId": "android.permission.RESET_FINGERPRINT_LOCKOUT",
    "permissionId": "RESET_FINGERPRINT_LOCKOUT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows direct access to the <Biometric>Service interfaces. Reserved for the system. @hide",
    "fullPermissionId": "android.permission.MANAGE_BIOMETRIC",
    "permissionId": "MANAGE_BIOMETRIC",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows direct access to the <Biometric>Service authentication methods. Reserved for the system. @hide",
    "fullPermissionId": "android.permission.USE_BIOMETRIC_INTERNAL",
    "permissionId": "USE_BIOMETRIC_INTERNAL",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows the system to control the BiometricDialog (SystemUI). Reserved for the system. @hide",
    "fullPermissionId": "android.permission.MANAGE_BIOMETRIC_DIALOG",
    "permissionId": "MANAGE_BIOMETRIC_DIALOG",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an app to reset face authentication attempt counter. Reserved for the system. @hide",
    "fullPermissionId": "android.permission.RESET_FACE_LOCKOUT",
    "permissionId": "RESET_FACE_LOCKOUT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to control keyguard. Only allowed for system processes. @hide",
    "fullPermissionId": "android.permission.CONTROL_KEYGUARD",
    "permissionId": "CONTROL_KEYGUARD",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to control keyguard features like secure notifications. @hide",
    "fullPermissionId": "android.permission.CONTROL_KEYGUARD_SECURE_NOTIFICATIONS",
    "permissionId": "CONTROL_KEYGUARD_SECURE_NOTIFICATIONS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to listen to trust changes. Only allowed for system processes. @hide",
    "fullPermissionId": "android.permission.TRUST_LISTENER",
    "permissionId": "TRUST_LISTENER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to provide a trust agent. @hide For security reasons, this is a platform-only permission.",
    "fullPermissionId": "android.permission.PROVIDE_TRUST_AGENT",
    "permissionId": "PROVIDE_TRUST_AGENT",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to show a message on the keyguard when asking to dismiss it. @hide For security reasons, this is a platform-only permission.",
    "fullPermissionId": "android.permission.SHOW_KEYGUARD_MESSAGE",
    "permissionId": "SHOW_KEYGUARD_MESSAGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to launch the trust agent settings activity. @hide",
    "fullPermissionId": "android.permission.LAUNCH_TRUST_AGENT_SETTINGS",
    "permissionId": "LAUNCH_TRUST_AGENT_SETTINGS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Must be required by an {@link android.service.trust.TrustAgentService}, to ensure that only the system can bind to it. @hide",
    "fullPermissionId": "android.permission.BIND_TRUST_AGENT",
    "permissionId": "BIND_TRUST_AGENT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Must be required by an {@link android.service.notification.NotificationAssistantService} to ensure that only the system can bind to it. <p>Protection level: signature @hide",
    "fullPermissionId": "android.permission.BIND_NOTIFICATION_ASSISTANT_SERVICE",
    "permissionId": "BIND_NOTIFICATION_ASSISTANT_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Must be held by services that extend {@link android.service.resolver.ResolverRankerService}. <p>Protection level: signature|privileged @hide",
    "fullPermissionId": "android.permission.PROVIDE_RESOLVER_RANKER_SERVICE",
    "permissionId": "PROVIDE_RESOLVER_RANKER_SERVICE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Must be required by services that extend {@link android.service.resolver.ResolverRankerService}, to ensure that only the system can bind to them. <p>Protection level: signature @hide",
    "fullPermissionId": "android.permission.BIND_RESOLVER_RANKER_SERVICE",
    "permissionId": "BIND_RESOLVER_RANKER_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by an {@link android.app.usage.CacheQuotaService} to ensure that only the system can bind to it. @hide This is not a third-party API (intended for OEMs and system apps).",
    "fullPermissionId": "android.permission.BIND_CACHE_QUOTA_SERVICE",
    "permissionId": "BIND_CACHE_QUOTA_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to call into a carrier setup flow. It is up to the carrier setup application to enforce that this permission is required @hide This is not a third-party API (intended for OEMs and system apps).",
    "fullPermissionId": "android.permission.INVOKE_CARRIER_SETUP",
    "permissionId": "INVOKE_CARRIER_SETUP",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to listen for network condition observations. @hide This is not a third-party API (intended for system apps).",
    "fullPermissionId": "android.permission.ACCESS_NETWORK_CONDITIONS",
    "permissionId": "ACCESS_NETWORK_CONDITIONS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to provision and access DRM certificates @hide This is not a third-party API (intended for system apps).",
    "fullPermissionId": "android.permission.ACCESS_DRM_CERTIFICATES",
    "permissionId": "ACCESS_DRM_CERTIFICATES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Api Allows an application to manage media projection sessions. @hide This is not a third-party API (intended for system apps).",
    "fullPermissionId": "android.permission.MANAGE_MEDIA_PROJECTION",
    "permissionId": "MANAGE_MEDIA_PROJECTION",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to read install sessions @hide This is not a third-party API (intended for system apps).",
    "fullPermissionId": "android.permission.READ_INSTALL_SESSIONS",
    "permissionId": "READ_INSTALL_SESSIONS",
    "protectionLevel": [
      "normal"
    ]
  },
  {
    "description": "@SystemApi Allows an application to remove DRM certificates @hide This is not a third-party API (intended for system apps).",
    "fullPermissionId": "android.permission.REMOVE_DRM_CERTIFICATES",
    "permissionId": "REMOVE_DRM_CERTIFICATES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to interact with the currently active {@link android.service.voice.VoiceInteractionService}. @hide",
    "fullPermissionId": "android.permission.ACCESS_VOICE_INTERACTION_SERVICE",
    "permissionId": "ACCESS_VOICE_INTERACTION_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to query whether DO_NOT_ASK_CREDENTIALS_ON_BOOT flag is set. @hide",
    "fullPermissionId": "android.permission.QUERY_DO_NOT_ASK_CREDENTIALS_ON_BOOT",
    "permissionId": "QUERY_DO_NOT_ASK_CREDENTIALS_ON_BOOT",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows applications to kill UIDs. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.KILL_UID",
    "permissionId": "KILL_UID",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "@SystemApi Allows applications to read the local WiFi and Bluetooth MAC address. @hide",
    "fullPermissionId": "android.permission.LOCAL_MAC_ADDRESS",
    "permissionId": "LOCAL_MAC_ADDRESS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows access to MAC addresses of WiFi and Bluetooth peer devices. @hide",
    "fullPermissionId": "android.permission.PEERS_MAC_ADDRESS",
    "permissionId": "PEERS_MAC_ADDRESS",
    "protectionLevel": [
      "signature",
      "setup"
    ]
  },
  {
    "description": "Allows the Nfc stack to dispatch Nfc messages to applications. Applications can use this permission to ensure incoming Nfc messages are from the Nfc stack and not simulated by another application. @hide",
    "fullPermissionId": "android.permission.DISPATCH_NFC_MESSAGE",
    "permissionId": "DISPATCH_NFC_MESSAGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows changing day / night mode when system is configured with config_lockDayNightMode set to true. If requesting app does not have permission, it will be ignored. @hide",
    "fullPermissionId": "android.permission.MODIFY_DAY_NIGHT_MODE",
    "permissionId": "MODIFY_DAY_NIGHT_MODE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows the holder to view the instant applications on the device. @hide",
    "fullPermissionId": "android.permission.VIEW_INSTANT_APPS",
    "permissionId": "VIEW_INSTANT_APPS",
    "protectionLevel": [
      "signature",
      "preinstalled"
    ]
  },
  {
    "description": "Allows the holder to manage whether the system can bind to services provided by instant apps. This permission is intended to protect test/development fucntionality and should be used only in such cases. @hide",
    "fullPermissionId": "android.permission.MANAGE_BIND_INSTANT_SERVICE",
    "permissionId": "MANAGE_BIND_INSTANT_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows receiving the usage of media resource e.g. video/audio codec and graphic memory. @hide",
    "fullPermissionId": "android.permission.RECEIVE_MEDIA_RESOURCE_USAGE",
    "permissionId": "RECEIVE_MEDIA_RESOURCE_USAGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by system/priv apps when accessing the sound trigger APIs given by {@link SoundTriggerManager}. @hide @SystemApi",
    "fullPermissionId": "android.permission.MANAGE_SOUND_TRIGGER",
    "permissionId": "MANAGE_SOUND_TRIGGER",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by system/priv apps implementing sound trigger detection services @hide @SystemApi",
    "fullPermissionId": "android.permission.BIND_SOUND_TRIGGER_DETECTION_SERVICE",
    "permissionId": "BIND_SOUND_TRIGGER_DETECTION_SERVICE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows trusted applications to dispatch managed provisioning message to Managed Provisioning app. If requesting app does not have permission, it will be ignored. @hide",
    "fullPermissionId": "android.permission.DISPATCH_PROVISIONING_MESSAGE",
    "permissionId": "DISPATCH_PROVISIONING_MESSAGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows the holder to read blocked numbers. See {@link android.provider.BlockedNumberContract}. @hide",
    "fullPermissionId": "android.permission.READ_BLOCKED_NUMBERS",
    "permissionId": "READ_BLOCKED_NUMBERS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows the holder to write blocked numbers. See {@link android.provider.BlockedNumberContract}. @hide",
    "fullPermissionId": "android.permission.WRITE_BLOCKED_NUMBERS",
    "permissionId": "WRITE_BLOCKED_NUMBERS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Must be required by system apps when accessing restricted VR APIs. @hide @SystemApi <p>Protection level: signature",
    "fullPermissionId": "android.permission.RESTRICTED_VR_ACCESS",
    "permissionId": "RESTRICTED_VR_ACCESS",
    "protectionLevel": [
      "signature",
      "preinstalled"
    ]
  },
  {
    "description": "Required to make calls to {@link android.service.vr.IVrManager}. @hide",
    "fullPermissionId": "android.permission.ACCESS_VR_MANAGER",
    "permissionId": "ACCESS_VR_MANAGER",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Required to access VR-Mode state and state change events via {android.app.VrStateCallback} @hide",
    "fullPermissionId": "android.permission.ACCESS_VR_STATE",
    "permissionId": "ACCESS_VR_STATE",
    "protectionLevel": [
      "signature",
      "preinstalled"
    ]
  },
  {
    "description": "Allows an application to whitelist tasks during lock task mode @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.UPDATE_LOCK_TASK_PACKAGES",
    "permissionId": "UPDATE_LOCK_TASK_PACKAGES",
    "protectionLevel": [
      "signature",
      "setup"
    ]
  },
  {
    "description": "@SystemApi Allows an application to replace the app name displayed alongside notifications in the N-release and later. @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.SUBSTITUTE_NOTIFICATION_APP_NAME",
    "permissionId": "SUBSTITUTE_NOTIFICATION_APP_NAME",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to show notifications before the device is provisioned. @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.NOTIFICATION_DURING_SETUP",
    "permissionId": "NOTIFICATION_DURING_SETUP",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to manage auto-fill sessions. @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.MANAGE_AUTO_FILL",
    "permissionId": "MANAGE_AUTO_FILL",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to manage the content capture service. @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.MANAGE_CONTENT_CAPTURE",
    "permissionId": "MANAGE_CONTENT_CAPTURE",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to manage the content suggestions service. @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.MANAGE_CONTENT_SUGGESTIONS",
    "permissionId": "MANAGE_CONTENT_SUGGESTIONS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to manage the app predictions service. @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.MANAGE_APP_PREDICTIONS",
    "permissionId": "MANAGE_APP_PREDICTIONS",
    "protectionLevel": [
      "signature",
      "appPredictor"
    ]
  },
  {
    "description": "Allows an app to set the theme overlay in /vendor/overlay being used. @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.MODIFY_THEME_OVERLAY",
    "permissionId": "MODIFY_THEME_OVERLAY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows to access all app shortcuts. @hide",
    "fullPermissionId": "android.permission.ACCESS_SHORTCUTS",
    "permissionId": "ACCESS_SHORTCUTS",
    "protectionLevel": [
      "signature",
      "textClassifier"
    ]
  },
  {
    "description": "@SystemApi Allows unlimited calls to shortcut mutation APIs. @hide",
    "fullPermissionId": "android.permission.UNLIMITED_SHORTCUTS_API_CALLS",
    "permissionId": "UNLIMITED_SHORTCUTS_API_CALLS",
    "protectionLevel": [
      "signature",
      "textClassifier"
    ]
  },
  {
    "description": "@SystemApi Allows an application to read the runtime profiles of other apps. @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.READ_RUNTIME_PROFILES",
    "permissionId": "READ_RUNTIME_PROFILES",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Allows audio policy management.",
    "fullPermissionId": "android.permission.MANAGE_AUDIO_POLICY",
    "permissionId": "MANAGE_AUDIO_POLICY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an application to turn on / off quiet mode. @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.MODIFY_QUIET_MODE",
    "permissionId": "MODIFY_QUIET_MODE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows internal management of the camera framework @hide",
    "fullPermissionId": "android.permission.MANAGE_CAMERA",
    "permissionId": "MANAGE_CAMERA",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows an application to control remote animations. See {@link ActivityOptions#makeRemoteAnimation} @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS",
    "permissionId": "CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to watch changes and/or active state of app ops. @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.WATCH_APPOPS",
    "permissionId": "WATCH_APPOPS",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Allows an application to directly open the \"Open by default\" page inside a package's Details screen. @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.OPEN_APP_OPEN_BY_DEFAULT_SETTINGS",
    "permissionId": "OPEN_APP_OPEN_BY_DEFAULT_SETTINGS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "Allows hidden API checks to be disabled when starting a process. @hide <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.DISABLE_HIDDEN_API_CHECKS",
    "permissionId": "DISABLE_HIDDEN_API_CHECKS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Permission that protects the {@link android.provider.Telephony.Intents#ACTION_DEFAULT_SMS_PACKAGE_CHANGED_INTERNAL} broadcast",
    "fullPermissionId": "android.permission.MONITOR_DEFAULT_SMS_PACKAGE",
    "permissionId": "MONITOR_DEFAULT_SMS_PACKAGE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "Must be required by an {@link android.service.watchdog.ExplicitHealthCheckService} to ensure that only the system can bind to it. @hide This is not a third-party API (intended for OEMs and system apps).",
    "fullPermissionId": "android.permission.BIND_EXPLICIT_HEALTH_CHECK_SERVICE",
    "permissionId": "BIND_EXPLICIT_HEALTH_CHECK_SERVICE",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@hide Permission that allows configuring appops. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.MANAGE_APPOPS",
    "permissionId": "MANAGE_APPOPS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@hide Permission that allows background clipboard access. <p>Not for use by third-party applications.",
    "fullPermissionId": "android.permission.READ_CLIPBOARD_IN_BACKGROUND",
    "permissionId": "READ_CLIPBOARD_IN_BACKGROUND",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows modifying accessibility state. @hide",
    "fullPermissionId": "android.permission.MANAGE_ACCESSIBILITY",
    "permissionId": "MANAGE_ACCESSIBILITY",
    "protectionLevel": [
      "signature",
      "setup"
    ]
  },
  {
    "description": "@SystemApi Allows an app to grant a profile owner access to device identifiers. <p>Not for use by third-party applications. @hide",
    "fullPermissionId": "android.permission.GRANT_PROFILE_OWNER_DEVICE_IDS_ACCESS",
    "permissionId": "GRANT_PROFILE_OWNER_DEVICE_IDS_ACCESS",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows requesting the framework broadcast the {@link Intent#ACTION_DEVICE_CUSTOMIZATION_READY} intent. @hide",
    "fullPermissionId": "android.permission.SEND_DEVICE_CUSTOMIZATION_READY",
    "permissionId": "SEND_DEVICE_CUSTOMIZATION_READY",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Permission that protects the {@link Intent#ACTION_DEVICE_CUSTOMIZATION_READY} intent. @hide",
    "fullPermissionId": "android.permission.RECEIVE_DEVICE_CUSTOMIZATION_READY",
    "permissionId": "RECEIVE_DEVICE_CUSTOMIZATION_READY",
    "protectionLevel": [
      "signature",
      "preinstalled"
    ]
  },
  {
    "description": "@SystemApi Allows wallpaper to be rendered in ambient mode. @hide",
    "fullPermissionId": "android.permission.AMBIENT_WALLPAPER",
    "permissionId": "AMBIENT_WALLPAPER",
    "protectionLevel": [
      "signature",
      "preinstalled"
    ]
  },
  {
    "description": "@SystemApi Allows sensor privacy to be modified. @hide",
    "fullPermissionId": "android.permission.MANAGE_SENSOR_PRIVACY",
    "permissionId": "MANAGE_SENSOR_PRIVACY",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Permission that protects the {@link Intent#ACTION_REVIEW_ACCESSIBILITY_SERVICES} intent. @hide",
    "fullPermissionId": "android.permission.REVIEW_ACCESSIBILITY_SERVICES",
    "permissionId": "REVIEW_ACCESSIBILITY_SERVICES",
    "protectionLevel": [
      "signature"
    ]
  },
  {
    "description": "@SystemApi Allows an activity to replace the app name and icon displayed in share targets in the sharesheet for the Q-release and later. @hide <p>Not for use by third-party applications.</p>",
    "fullPermissionId": "android.permission.SUBSTITUTE_SHARE_TARGET_APP_NAME_AND_ICON",
    "permissionId": "SUBSTITUTE_SHARE_TARGET_APP_NAME_AND_ICON",
    "protectionLevel": [
      "signature",
      "privileged"
    ]
  },
  {
    "description": "@SystemApi Allows an application to access shared libraries. @hide",
    "fullPermissionId": "android.permission.ACCESS_SHARED_LIBRARIES",
    "permissionId": "ACCESS_SHARED_LIBRARIES",
    "protectionLevel": [
      "signature",
      "installer"
    ]
  },
  {
    "description": "Allows input events to be monitored. Very dangerous! @hide",
    "fullPermissionId": "android.permission.MONITOR_INPUT",
    "permissionId": "MONITOR_INPUT",
    "protectionLevel": [
      "signature"
    ]
  }
]